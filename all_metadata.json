{
  "US6285999.pdf": {
    "chunks": [
      {
        "type": "text",
        "page": 1,
        "content": "(12) United States Patent \nPage \nUSOO6285999B1 \n(10) Patent No.: \nUS 6,285,999 B1 \n(45) Date of Patent: \nSep. 4, 2001 \n(54) METHOD FOR NODE RANKING INA \nLINKED DATABASE \n(75) Inventor: Lawrence Page, Stanford, CA (US) \n(73) Assignee: The Board of Trustees of the Leland \nStanford Junior University, Stanford, \nCA (US) \n(*) Notice: \nSubject to any disclaimer, the term of this \npatent is extended or adjusted under 35 \nU.S.C. 154(b) by 0 days. \n(21) Appl. No.: 09/004,827 \n(22) Filed: \nJan. 9, 1998 \nRelated U.S. Application Data \n(60) Provisional application No. 60/035,205, filed on Jan. 10, \n1997. \n(51) Int. Cl.\" .................................................. G06F 17/30 \n(52) U.S. Cl. .................................... 707/5; 707/7, 707/501 \n(58) Field of Search .................................... 707/100, 5, 7, \n707/513, 1–3, 10, 104, 501; 345/440, 382/226, \n229, 230, 231 \n(56) \nReferences Cited \nU.S. PATENT DOCUMENTS \n4,953,106 * \n5,450,535 * \n8/1990 Gansner et al. ..................... 345/440 \n9/1995 North ................ \n... 395/140 \n... 395/610 \n5,748,954 \n5/1998 Mauldin .... \n5,752,241 * 5/1998 Cohen ........... \n... 707/3 \n5,832,494 * 11/1998 Egger et al. ...... \n707/102 \n5,848,407 \n12/1998 Ishikawa et al. ........................ 707/2 \n6,014,678 \n1/2000 Inoue et al. .......................... 707/501 \nOTHER PUBLICATIONS \nS. Jeromy Carriere et al., “Web Query: Searching and Visu \nalizing the Web through Connectivity”, Computer Networks \nand ISDN Systems 29 (1997). pp. 1257–1267.* \nWang et al\"Prefetching in Worl WideWeb\", IEEE 1996, pp. \n28-32. \nRamer et al. “Similarity, Probability and Database Organi \nsation: Extended Abstract”, 1996, pp. 272.276.* \nCraig Boyle “To link or not to link: An empirical comparison \nof Hypertext linking strategies”. ACM 1992, pp. 221-231.* \nL. Katz, \"A new Status indeX derived from Sociometric \nanalysis,” 1953, Psychometricka, vol. 18, pp.39-43. \nC.H. Hubbell, “An input-output approach to clique identi \nfication sociometry,” 1965, pp. 377–399. \nMizruchi et al., “Techniques for disaggregating centrality \nscores in Social networks,” 1996, Sociological Methodology, \npp. 26-48. \nE. Garfield, “Citation analysis as a tool in journal evalua \ntion,” 1972, Science, vol. 178, pp. 471-479. \nPinski et al., “Citation influence for journal aggregates of \nScientific publications: Theory, with application to the lit \nerature of physics,” 1976, Inf. Proc. And Management, vol. \n12, pp. 297-312. \nN. Geller, “On the citation influence methodology of Pinski \nand Narin,” 1978, Inf. Proc. And Management, vol. 14, pp. \n93-95. \nP. Doreian, “Measuring the relative Standing of disciplinary \njournals,” 1988, Inf. Proc. And Management, vol. 24, pp. \n45-56. \n(List continued on next page.) \nPrimary Examiner Thomas Black \nAssistant Examiner Uyen Le \n(74) Attorney, Agent, or Firm-Harrity & Snyder L.L.P. \n(57) \nABSTRACT \nA method assigns importance ranks to nodes in a linked \ndatabase, Such as any database of documents containing \ncitations, the World wide web or any other hypermedia \ndatabase. The rank assigned to a document is calculated \nfrom the ranks of documents citing it. In addition, the rank \nof a document is calculated from a constant representing the \nprobability that a browser through the database will ran \ndomly jump to the document. The method is particularly \nuseful in enhancing the performance of Search engine results \nfor hypermedia databases, Such as the World wide web, \nwhose documents have a large variation in quality. \n29 Claims, 3 Drawing Sheets"
      },
      {
        "type": "text",
        "page": 2,
        "content": "US 6,285,999 B1 \nPage 2 \nOTHER PUBLICATIONS \nP. Doreian, “A measure of Standing for citation networks \nwithin a wider environment,” 1994, Inf. Proc. And Manage \nment, vol. 30, pp. 21-31. \nBotafogo et al., \"Structural analysis of hypertext: Identifying \nhierarchies and useful metrics.” 1992, ACM Trans. Inc. \nSystems, vol. 10, pp. 142-180. \nMark E. Frisse, “Searching for information in a hypertext \nmedical handbook,” 1988, Communications of the ACM, \nvol. 31, No. 7, pp. 880-886. \nMassimo Marchiori, “The quest for correct information on \nthe Web: Hyper search engines,” 1997, Computer Networks \nand ISDN Systems, vol. 29, No. 8-13, pp. 1225–1235. \nOliver A. McBryan, “GENVL and WWWW: Tools for \ntaming the web,” 1994, Proceedings of the first International \nWold Wide Web Conference, pp. 1-13. \nCarriere et al., “WebOuery: Searching and visualizing the \nweb through connectivity.” 1997, Proc. 6' International \nWorld Wide Web Conference, pp. 1-14. \nArocena et al., “Applications of a web query language,” \n1997, Computer Networks and ISDN Systems, vol. 29, No. \n8-13, pp. 1305–1316. \nJon M. Kleinberg, “Authoritative sources in a hyperlinked \nenvironment,” 1998, Proc. Of the 9\" Annual ACM-SIAM \nSymposium on Discrete Algorithms, pp. 668-677. \nHenzinger et al., “Measuring indeX quality using random \nwalks on the web”, 1999, Proc. of the 8' International World \nWide Web Conference, pp. 213–225. \n* cited by examiner"
      },
      {
        "type": "image_description",
        "page": 3,
        "content": "The image shows a patent document with annotations highlighting key elements of the patent: 1) the title \"US Patent\" at the top, 2) the number \"6,250,799\" which is likely the patent number, 3) a diagram labeled \"Fig. 1\" that represents a system or device with various components interconnected by...",
        "image_path": "extracted_images\\US6285999_page_3.png"
      },
      {
        "type": "image_description",
        "page": 4,
        "content": "The image shows a US patent figure (fig 2) with various elements connected by arrows indicating the flow of data or operation. It depicts a system with multiple components, including a sensor block labeled '0'. There's a central block labeled '1', which seems to be processing data from '0' and is...",
        "image_path": "extracted_images\\US6285999_page_4.png"
      },
      {
        "type": "image_description",
        "page": 5,
        "content": "The image is a patent document, page 5, with text and diagrams. The primary focus of the page is on a flowchart that outlines a process for computer vision, specifically related to object detection in aerial images. The process involves several steps: selecting initial nominal vectors, computing an...",
        "image_path": "extracted_images\\US6285999_page_5.png"
      },
      {
        "type": "text",
        "page": 6,
        "content": "US 6,285,999 B1 \n1 \nMETHOD FOR NODE RANKING IN A \nLINKED DATABASE \nCROSS-REFERENCES TO RELATED \nAPPLICATIONS \nThis application claims priority from U.S. provisional \npatent application Ser. No. 60/035,205 filed Jan. 10, 1997, \nwhich is incorporated herein by reference. \nSTATEMENT REGARDING GOVERNMENT \nSUPPORT \nThis invention was supported in part by the National \nScience Foundation grant number IRI-9411306-4. The Gov \nernment has certain rights in the invention. \nFIELD OF THE INVENTION \nThis invention relates generally to techniques for analyZ \ning linked databases. More particularly, it relates to methods \nfor assigning ranks to nodes in a linked database, Such as any \ndatabase of documents containing citations, the World wide \nweb or any other hypermedia database. \nBACKGROUND OF THE INVENTION \nDue to the developments in computer technology and its \nincrease in popularity, large numbers of people have recently \nStarted to frequently Search huge databases. For example, \ninternet Search engines are frequently used to Search the \nentire World wide Web. Currently, a popular Search engine \nmight execute over 30 million Searches per day of the \nindexable part of the web, which has a size in excess of 500 \nGigabytes. Information retrieval Systems are traditionally \njudged by their precision and recall. What is often neglected, \nhowever, is the quality of the results produced by these \nSearch engines. Large databases of documents Such as the \nweb contain many low quality documents. As a result, \nSearches typically return hundreds of irrelevant or unwanted \ndocuments which camouflage the few relevant ones. In order \nto improve the Selectivity of the results, common techniques \nallow the user to constrain the Scope of the Search to a \nSpecified Subset of the database, or to provide additional \nSearch terms. These techniques are most effective in cases \nwhere the database is homogeneous and already classified \ninto Subsets, or in cases where the user is Searching for well \nknown and Specific information. In other cases, however, \nthese techniques are often not effective because each con \nStraint introduced by the user increases the chances that the \ndesired information will be inadvertently eliminated from \nthe Search results. \nSearch engines presently use various techniques that \nattempt to present more relevant documents. Typically, \ndocuments are ranked according to variations of a Standard \nvector Space model. These variations could include (a) how \nrecently the document was updated, and/or (b) how close the \nSearch terms are to the beginning of the document. Although \nthis Strategy provides Search results that are better than with \nno ranking at all, the results Still have relatively low quality. \nMoreover, when Searching the highly competitive web, this \nmeasure of relevancy is Vulnerable to \"spamming” tech \nniques that authors can use to artificially inflate their docu \nment's relevance in order to draw attention to it or its \nadvertisements. For this reason Search results often contain \ncommercial appeals that should not be considered a match to \nthe query. Although Search engines are designed to avoid \nSuch ruses, poorly conceived mechanisms can result in \ndisappointing failures to retrieve desired information. \n1O \n15 \n25 \n35 \n40 \n45 \n50 \n55 \n60 \n65 \n2 \nHyperlink Search Engine, developed by IDD Information \nServices, (http://rankdex.gari.com/) uses backlink informa \ntion (i.e., information from pages that contain links to the \ncurrent page) to assist in identifying relevant web docu \nments. Rather than using the content of a document to \ndetermine relevance, the technique uses the anchor text of \nlinks to the document to characterize the relevance of a \ndocument. The idea of associating anchor text with the page \nthe text points to was first implemented in the World Wide \nWeb Worm (Oliver A. McBryan, GENVL and WWWW: \nTools for Taming the Web, First International Conference on \nthe World Wide Web, CERN, Geneva, May 25–27, 1994). \nThe Hyperlink Search Engine has applied this idea to assist \nin determining document relevance in a Search. In particular, \nSearch query terms are compared to a collection of anchor \ntext descriptions that point to the page, rather than to a \nkeyword index of the page content. A rank is then assigned \nto a document based on the degree to which the Search terms \nmatch the anchor descriptions in its backlink documents. \nThe well known idea of citation counting is a simple \nmethod for determining the importance of a document by \ncounting its number of citations, or backlinkS. The citation \nrank r(A) of a document which has n backlink pages is \nSimply \nIn the case of databases whose content is of relatively \nuniform quality and importance it is valid to assume that a \nhighly cited document should be of greater interest than a \ndocument with only one or two citations. Many databases, \nhowever, have eXtreme variations in the quality and impor \ntance of documents. In these cases, citation ranking is overly \nSimplistic. For example, citation ranking will give the same \nrank to a document that is cited once on an obscure page as \nto a similar document that is cited once on a well-known and \nhighly respected page. \nSUMMARY \nVarious aspects of the present invention provide Systems \nand methods for ranking documents in a linked database. \nOne aspect provides an objective ranking based on the \nrelationship between documents. Another aspect of the \ninvention is directed to a technique for ranking documents \nwithin a database whose content has a large variation in \nquality and importance. Another aspect of the present inven \ntion is to provide a document ranking method that is Scalable \nand can be applied to extremely large databaseS Such as the \nworld wide web. Additional aspects of the invention will \nbecome apparent in View of the following description and \nasSociated figures. \nOne aspect of the present invention is directed to taking \nadvantage of the linked Structure of a database to assign a \nrank to each document in the database, where the document \nrank is a measure of the importance of a document. Rather \nthan determining relevance only from the intrinsic content of \na document, or from the anchor text of backlinks to the \ndocument, a method consistent with the invention deter \nmines importance from the extrinsic relationships between \ndocuments. Intuitively, a document should be important \n(regardless of its content) if it is highly cited by other \ndocuments. Not all citations, however, are necessarily of \nequal Significance. A citation from an important document is \nmore important than a citation from a relatively unimportant \ndocument. Thus, the importance of a page, and hence the \nrank assigned to it, should depend not just on the number of \ncitations it has, but on the importance of the citing docu \nments as well. This implies a recursive definition of rank: the"
      },
      {
        "type": "text",
        "page": 7,
        "content": "US 6,285,999 B1 \n3 \nrank of a document is a function of the ranks of the \ndocuments which cite it. The ranks of documents may be \ncalculated by an iterative procedure on a linked database. \nBecause citations, or links, are ways of directing \nattention, the important documents correspond to those \ndocuments to which the most attention is directed. Thus, a \nhigh rank indicates that a document is considered valuable \nby many people or by important people. Most likely, these \nare the pages to which Someone performing a Search would \nlike to direct his or her attention. Looked at another way, the \nimportance of a page is directly related to the Steady-state \nprobability that a random Web Surfer ends up at the page \nafter following a large number of linkS. Because there is a \nlarger probability that a Surfer will end up at an important \npage than at an unimportant page, this method of ranking \npages assigns higher ranks to the more important pages. \nIn one aspect of the invention, a computer implemented \nmethod is provided for Scoring linked database documents. \nThe method comprises the Steps of \nobtaining a plurality of documents, at least Some of the \ndocuments being linked documents, at least Some of the \ndocuments being linking documents, and at least Some \nof the documents being both linked documents and \nlinking documents, each of the linked documents being \npointed to by a link in one or more of the linking \ndocuments, assigning a Score to each of the linked \ndocuments based on Scores of the one or more linking \ndocuments, and processing the linked documents \naccording to their Scores. \nAdditional aspects, applications and advantages will \nbecome apparent in View of the following description and \nasSociated figures. \nBRIEF DESCRIPTION OF THE DRAWINGS \nFIG. 1 is a diagram of the relationship between three \nlinked hypertext documents according to the invention. \nFIG. 2 is a diagram of a three-document web illustrating \nthe rank associated with each document in accordance with \nthe present invention. \nFIG. 3 is a flowchart of one embodiment of the invention. \nDETAILED DESCRIPTION \nAlthough the following detailed description contains \nmany specifics for the purposes of illustration, anyone of \nordinary skill in the art will appreciate that many variations \nand alterations to the following details are within the Scope \nof the invention. Accordingly, the following embodiments of \nthe invention are Set forth without any loSS of generality to, \nand without imposing limitations upon, the claimed inven \ntion. For Support in reducing the present invention to \npractice, the inventor acknowledges Sergey Brin, Scott \nHassan, Rajeev Motwani, Alan Steremberg, and Terry Wino \ngrad. \nA linked database (i.e. any database of documents con \ntaining mutual citations, Such as the Worldwide web or other \nhypermedia archive, a dictionary or thesaurus, and a data \nbase of academic articles, patents, or court cases) can be \nrepresented as a directed graph of N nodes, where each node \ncorresponds to a web page document and where the directed \nconnections between nodes correspond to links from one \ndocument to another. A given node has a set of forward links \nthat connect it to children nodes, and a set of backward links \nthat connect it to parent nodes. FIG. 1 shows a typical \nrelationship between three hypertext documents A, B, and C. \nAS shown in this particular figure, the first linkS in docu \n15 \n25 \n35 \n40 \n45 \n50 \n55 \n60 \n65 \n4 \nments B and C are pointers to document A. In this case we \nsay that B and C are backlinks of A, and that A is a forward \nlink of B and of C. Documents B and C also have other \nforward links to documents that are not shown. \nAlthough the ranking method of the present invention is \nSuperficially similar to the well known idea of citation \ncounting, the present method is more Subtle and complex \nthan citation counting and gives far Superior results. In a \nSimple citation ranking, the rank of a document A which has \nin backlink pages is simply \nAccording to one embodiment of the present method of \nranking, the backlinks from different pages are weighted \ndifferently and the number of links on each page is normal \nized. More precisely, the rank of a page A is defined \naccording to the present invention as \nr(B1) -- \nB1 \nr(B) ) \nC \nr(A) = + (1-0) \n* IBT): \nwhere B, ..., B, are the backlink pages of A, r(B), ..., \nr(B) are their ranks, B, . . . , B, are their numbers of \nforward links, and C. is a constant in the interval 0,1, and \nN is the total number of pages in the web. This definition is \nclearly more complicated and Subtle than the Simple citation \nrank. Like the citation rank, this definition yields a page rank \nthat increases as the number of backlinks increases. But the \npresent method considers a citation from a highly ranked \nbacklink as more important than a citation from a lowly \nranked backlink (provided both citations come from back \nlink documents that have an equal number of forward links). \nIn the present invention, it is possible, therefore, for a \ndocument with only one backlink (from a very highly ranked \npage) to have a higher rank than another document with \nmany backlinks (from very low ranked pages). This is not \nthe case with Simple citation ranking. \nThe ranks form a probability distribution over web pages, \nSo that the Sum of ranks over all web pages is unity. The rank \nof a page can be interpreted as the probability that a Surfer \nwill be at the page after following a large number of forward \nlinks. The constant C. in the formula is interpreted as the \nprobability that the web surfer will jump randomly to any \nweb page instead of following a forward link. The page \nranks for all the pages can be calculated using a simple \niterative algorithm, and corresponds to the principal eigen \nvector of the normalized link matrix of the web, as will be \ndiscussed in more detail below. \nIn order to illustrate the present method of ranking, \nconsider the simple web of three documents shown in FIG. \n2. For Simplicity of illustration, we assume in this example \nthat r=0. Document A has a Single backlink to document C, \nand this is the only forward link of document C, so \nr(A)=r(C). \nDocument B has a Single backlink to document A, but this \nis one of two forward links of document A, SO \nr(B)=r(A)/2. \nDocument C has two backlinks. One backlink is to \ndocument B, and this is the only forward link of document \nB. The other backlink is to document A via the other of the \ntwo forward links from A. Thus \nr(C)=r(B)+r(A)/2. \nIn this simple illustrative case we can see by inspection \nthat r(A)=0.4, r(B)=0.2, and r(C)=0.4. Although a typical \nvalue for C. is -0.1, if for simplicity we set C =0.5 (which \ncorresponds to a 50% chance that a Surfer will randomly \njump to one of the three pages rather than following a"
      },
      {
        "type": "text",
        "page": 8,
        "content": "US 6,285,999 B1 \nS \nforward link), then the mathematical relationships between \nthe ranks become more complicated. In particular, we then \nhave \nThe solution in this case is r(A)=1%9, r(B)=1%9, and \nr(C)=1549. \nIn practice, there are millions of documents and it is not \npossible to find the Solution to a million equations by \ninspection. Accordingly, in the preferred embodiment a \nSimple iterative procedure is used. AS the initial State we \nmay simply Set all the ranks equal to 1/N. The formulas are \nthen used to calculate a new set of rankS based on the \nexisting ranks. In the case of millions of documents, Suffi \ncient convergence typically takes on the order of 100 itera \ntions. It is not always necessary or even desirable, however, \nto calculate the rank of every page with high precision. Even \napproximate rank values, using two or more iterations, can \nprovide very valuable, or even Superior, information. \nThe iteration proceSS can be understood as a steady-state \nprobability distribution calculated from a model of a random \nSurfer. This model is mathematically equivalent to the expla \nnation described above, but provides a more direct and \nconcise characterization of the procedure. The model \nincludes (a) an initial N-dimensional probability distribution \nvector po where each component poil gives the initial \nprobability that a random Surfer will start at a node i, and (b) \nan NxN transition probability matrix A where each compo \nnent Aij gives the probability that the surfer will move \nfrom node i to node j. The probability distribution of the \ngraph after the Surfer follows one link is p=Apo, and after \ntwo links the probability distribution is p=Ap=Ap'. \nASSuming this iteration converges, it will converge to a \nSteady-state probability \npea = lim. Apo, \nwhich is a dominant eigenvector of A. The iteration circu \nlates the probability through the linked nodes like energy \nflows through a circuit and accumulates in important places. \nBecause pages with no links occur in Significant numbers \nand bleed off energy, they cause Some complication with \ncomputing the ranking. This complication is caused by the \nfact they can add huge amounts to the \"random jump' factor. \nThis, in turn, causes loops in the graph to be highly empha \nsized which is not generally a desirable property of the \nmodel. In order to address this problem, these childless \npages can Simply be removed from the model during the \niterative Stages, and added back in after the iteration is \ncomplete. After the childless pages are added back in, \nhowever, the same number of iterations that was required to \nremove them should be done to make Sure they all receive \na value. (Note that in order to ensure convergence, the norm \nof p must be made equal to 1 after each iteration.) An \nalternate method to control the contribution of the childless \nnodes is to only estimate the Steady State by iterating a Small \nnumber of times. \nThe rank ri) of a node i can then be defined as a function \nof this steady-state probability distribution. For example, the \nrank can be defined simply by ri=pooi. This method of \ncalculating rank is mathematically equivalent to the iterative \nmethod described first. Those skilled in the art will appre \nciate that this same method can be characterized in various \ndifferent ways that are mathematically equivalent. Such \ncharacterizations are obviously within the Scope of the \n15 \n25 \n35 \n40 \n45 \n50 \n55 \n60 \n65 \n6 \npresent invention. Because the rank of various different \ndocuments can vary by orders of magnitude, it is convenient \nto define a logarithmic rank \npei \nri) = log- \n{pok: \nPeo \nke 1, N \nwhich assigns a rank of 0 to the lowest ranked node and \nincreases by 1 for each order of magnitude in importance \nhigher than the lowest ranked node. \n“FIG. 3 shows one embodiment of a computer imple \nmented method for calculating an importance rank for N \nlinked nodes of a linked database. At a step 101, an initial \nN-dimensional vector po is Selected. An approximation p, to \na steady-state probability p in accordance with the equation \np=A\"po is computed at a step 103. Matrix A can be an NXN \ntransition probability matrix having elements Ai \nrepre \nSenting a probability of moving from node i to node j. At a \nstep 105, a rank rk) for node k from a k\" component of p, \nis determined.”. \nIn one particular embodiment, a finite number of itera \ntions are performed to approximate poo. The initial distri \nbution can be Selected to be uniform or non-uniform. A \nuniform distribution would set each component of p equal \nto 1/N. A non-uniform distribution, for example, can divide \nthe initial probability among a few nodes which are known \na priori to have relatively large importance. This non \nuniform distribution decreases the number of iterations \nrequired to obtain a close approximation to poo and also is \none way to reduce the effect of artificially inflating relevance \nby adding unrelated terms. \nIn another particular embodiment, the transition matrix A \nis given by \nA = 1 + (1 - a B \n= 1 + (1-0)B. \nwhere 1 is an NxN matrix consisting of all 1s., C. is the \nprobability that a Surfer will jump randomly to any one \nof the N nodes, and B is a matrix whose elements \nBij are given by \n1 \n- if node i points to node i \nBij = n; \n0 otherwise, \nwhere n is the total number of forward links from node \ni. The (1-C) factor acts as a damping factor that \nlimits the extent to which a document's rank can be \ninherited by children documents. This models the \nfact that users typically jump to a different place in \nthe web after following a few links. The value of C. \nis typically around 15%. Including this damping is \nimportant when many iterations are used to calculate \nthe rank So that there is no artificial concentration of \nrank importance within loops of the web. \nAlternatively, one may set C=0 and only iterate a few \ntimes in the calculation. \nConsistent with the present invention, there are Several \nways that this method can be adapted or altered for various \npurposes. AS already mentioned above, rather than including \nthe random linking probability C. equally among all nodes, \nit can be divided in various ways among all the Sites by \nchanging the 1 matrix to another matrix. For example, it \ncould be distributed So that a random jump takes the Surfer"
      },
      {
        "type": "text",
        "page": 9,
        "content": "US 6,285,999 B1 \n7 \nto one of a few nodes that have a high importance, and will \nnot take the surfer to any of the other nodes. This can be very \neffective in preventing deceptively tagged documents from \nreceiving artificially inflated relevance. Alternatively, the \nrandom linking probability could be distributed so that \nrandom jumps do not happen from high importance nodes, \nand only happen from other nodes. This distribution would \nmodel a Surfer who is more likely to make random jumps \nfrom unimportant sites and follow forward links from \nimportant sites. A modification to avoid drawing unwar \nranted attention to pages with artificially inflated relevance \nis to ignore local links between documents and only consider \nlinks between Separate domains. Because the links from \nother Sites to the document are not directly under the control \nof a typical web site designer, it is then difficult for the \ndesigner to artificially inflate the ranking. A simpler \napproach is to weight links from pages contained on the \nSame web server less than links from other Servers. Also, in \naddition to Servers, internet domains and any general mea \nSure of the distance between links could be used to deter \nmine Such a weighting. \nAdditional modifications can further improve the perfor \nmance of this method. Rank can be increased for documents \nwhose backlinks are maintained by different institutions and \nauthors in various geographic locations. Or it can be \nincreased if linkS come from unusually important web \nlocations Such as the root page of a domain. \nLinkS can also be weighted by their relative importance \nwithin a document. For example, highly visible links that are \nnear the top of a document can be given more weight. Also, \nlinks that are in large fonts or emphasized in other ways can \nbe given more weight. In this way, the model better approxi \nmates human usage and authors intentions. In many cases \nit is appropriate to assign higher value to links coming from \npages that have been modified recently Since Such informa \ntion is less likely to be obsolete. \nVarious implementations of the invention have the advan \ntage that the convergence is very fast (a few hours using \ncurrent processors) and it is much less expensive than \nbuilding a full-text index. This Speed allows the ranking to \nbe customized or personalized for Specific users. For \nexample, a user's home page and/or bookmarks can be given \na large initial importance, and/or a high probability of a \nrandom jump returning to it. This high rating essentially \nindicates to the System that the person's homepage and/or \nbookmarks does indeed contain Subjects of importance that \nshould be highly ranked. This procedure essentially trains \nthe System to recognize pages related to the person's inter \nests. The present method of determining the rank of a \ndocument can also be used to enhance the display of \ndocuments. In particular, each link in a document can be \nannotated with an icon, text, or other indicator of the rank of \nthe document that each link points to. Anyone viewing the \ndocument can then easily See the relative importance of \nvarious links in the document. \nThe present method of ranking documents in a database \ncan also be useful for estimating the amount of attention any \ndocument receives on the Web Since it models human \nbehavior when Surfing the Web. Estimating the importance \nof each backlink to a page can be useful for many purposes \nincluding Site design, busineSS arrangements with the \nbacklinkers, and marketing. The effect of potential changes \nto the hypertext Structure can be evaluated by adding them \nto the link Structure and recomputing the ranking. \nReal usage data, when available, can be used as a starting \npoint for the model and as the distribution for the alpha \nfactor. \n15 \n25 \n35 \n40 \n45 \n50 \n55 \n60 \n65 \n8 \nThis can allow this ranking model to fill holes in the usage \ndata, and provide a more accurate or comprehensive picture. \nThus, although this method of ranking does not necessar \nily match the actual traffic, it nevertheless measures the \ndegree of exposure a document has throughout the web. \nAnother important application and embodiment of the \npresent invention is directed to enhancing the quality of \nresults from Web Search engines. In this application of the \npresent invention, a ranking method according to the inven \ntion is integrated into a web search engine to produce results \nfar Superior to existing methods in quality and performance. \nA Search engine employing a ranking method of the present \ninvention provides automation while producing results com \nparable to a human maintained categorized System. In this \napproach, a web crawler explores the web and creates an \nindex of the web content, as well as a directed graph of \nnodes corresponding to the Structure of hyperlinks. The \nnodes of the graph (i.e. pages of the web) are then ranked \naccording to importance as described above in connection \nwith various exemplary embodiments of the present inven \ntion. \nThe Search engine is used to locate documents that match \nthe Specified Search criteria, either by Searching full text, or \nby Searching titles only. In addition, the Search can include \nthe anchor text associated with backlinks to the page. This \napproach has Several advantages in this context. First, \nanchors often provide more accurate descriptions of web \npages than the pages themselves. Second, anchors may exist \nfor images, programs, and other objects that cannot be \nindexed by a text-based Search engine. This also makes it \npossible to return web pages which have not actually been \ncrawled. In addition, the engine can compare the Search \nterms with a list of its backlink document titles. Thus, even \nthough the text of the document itself may not match the \nSearch terms, if the document is cited by documents whose \ntitles or backlink anchor text match the Search terms, the \ndocument will be considered a match. In addition to or \ninstead of the anchor text, the text in the immediate vicinity \nof the backlink anchor text can also be compared to the \nSearch terms in order to improve the Search. \nOnce a set of documents is identified that match the Search \nterms, the list of documents is then Sorted with high ranking \ndocuments first and low ranking documents last. The rank \ning in this case is a function which combines all of the above \nfactorS Such as the objective ranking and textual matching. \nIf desired, the results can be grouped by category or Site as \nwell. \nIt will be clear to one skilled in the art that the above \nembodiments may be altered in many ways without depart \ning from the Scope of the invention. Accordingly, the Scope \nof the invention should be determined by the following \nclaims and their legal equivalents. \nWhat is claimed is: \n1. A computer implemented method of Scoring a plurality \nof linked documents, comprising: \nobtaining a plurality of documents, at least Some of the \ndocuments being linked documents, at least Some of the \ndocuments being linking documents, and at least Some \nof the documents being both linked documents and \nlinking documents, each of the linked documents being \npointed to by a link in one or more of the linking \ndocuments, \nassigning a Score to each of the linked documents based \non Scores of the one or more linking documents and \nprocessing the linked documents according to their \nSCOCS."
      },
      {
        "type": "text",
        "page": 10,
        "content": "US 6,285,999 B1 \n9 \n2. The method of claim 1, wherein the assigning includes: \nidentifying a weighting factor for each of the linking \ndocuments, the weighting factor being dependent on \nthe number of links to the one or more linking \ndocuments, and \nadjusting the Score of each of the one or more linking \ndocuments based on the identified weighting factor. \n3. The method of claim 1, wherein the assigning includes: \nidentifying a weighting factor for each of the linking \ndocuments, the weighting factor being dependent on an \nestimation of a probability that a linking document will \nbe accessed, and \nadjusting the Score of each of the one or more linking \ndocuments based on the identified weighting factor. \n4. The method of claim 1, wherein the assigning includes: \nidentifying a weighting factor for each of the linking \ndocuments, the weighting factor being dependent on \nthe URL, host, domain, author, institution, or last \nupdate time of the one or more linking documents, and \nadjusting the Score of each of the one or more linking \ndocuments based on the identified weighting factor. \n5. The method of claim 1, wherein the assigning includes: \nidentifying a weighting factor for each of the linking \ndocuments, the weighting factor being dependent on \nwhether the one or more linking documents are Selected \ndocuments or roots, and \nadjusting the Score of each of the one or more linking \ndocuments based on the identified weighting factor. \n6. The method of claim 1, wherein the assigning includes: \nidentifying a weighting factor for each of the linking \ndocuments, the weighting factor being dependent on \nthe importance, visibility or textual emphasis of the \nlinks in the one or more linking documents, and \nadjusting the Score of each of the one or more linking \ndocuments based on the identified weighting factor. \n7. The method of claim 1, wherein the assigning includes: \nidentifying a weighting factor for each of the linking \ndocuments, the weighting factor being dependent on a \nparticular user's preferences, the rate at which users \naccess the one or more linking documents, or the \nimportance of the one or more linking documents, and \nadjusting the Score of each of the one or more linking \ndocuments based on the identified weighting factor. \n8. A computer implemented method of determining a \nScore for a plurality of linked documents, comprising: \nobtaining a plurality of linked documents, \nSelecting one of the linked documents, \nassigning a Score to the Selected document that is depen \ndent on Scores of documents that link to the Selected \ndocument; and \nprocessing the linked documents according to their \nSCOCS. \n9. A computer implemented method of ranking a plurality \nof linked documents, comprising: \nobtaining a plurality of documents, at least Some of the \ndocuments being linked documents and at least Some of \nthe documents being linking documents, at least Some \nof the linking documents also being linked documents, \neach of the linked documents being pointed to by a link \nin one or more of the linking documents, \ngenerating an initial estimate of a rank for each of the \nlinked documents, \nupdating the estimate of the rank for each of the linked \ndocuments using ranks for the one or more linking \ndocuments, and \n5 \n15 \n25 \n35 \n40 \n45 \n50 \n55 \n60 \n65 \n10 \nprocessing the linked documents according to their \nupdated rankS. \n10. A computer implemented method of ranking a plural \nity of linked documents, comprising: \nautomatically performing a random traversal of a plurality \nof linked documents, the random traversal including \nSelecting a random link to traverse in a current linked \ndocument; \nfor each linked document that is traversed, assigning a \nrank to the linked document that is dependent on the \nnumber of times the linked document has been tra \nVersed; and \nprocessing the plurality of linked documents according to \ntheir rank. \n11. The method of claim 10, wherein there is a predeter \nmined probability that the next linked document to be \ntraversed will be a random one according to a distribution of \nthe plurality of linked documents. \n12. The method of claim 1, wherein the processing \nincludes: \ndisplaying links to the linked documents as a directory \nlisting. \n13. The method of claim 1, wherein the processing \nincludes: \ndisplaying links to the linked documents, and \ndisplaying annotations representing the Score of each of \nthe linked documents. \n14. The method of claim 13, wherein the annotations are \nbars, icons, or text. \n15. The method of claim 1, further comprising: \nprocessing the linked documents based on textual match \ning. \n16. The method of claim 15, wherein the textual matching \nincludes matching anchor text associated with the linkS. \n17. The method of claim 1, further comprising: \nprocessing the linked documents based on groupings of \nthe linked documents. \n18. A computer-readable medium that Stores instructions \nexecutable by one or more processing devices to perform a \nmethod for determining Scores for a plurality of linked \ndocuments, comprising: \ninstructions for obtaining a plurality of documents, at \nleast Some of the documents being linked documents, at \nleast Some of the documents being linking documents, \nand at least Some of the documents being both linked \ndocuments and linking documents, each of the linked \ndocuments being pointed to by a link in one or more of \nthe linking documents, \ninstructions for determining a Score for each of the linked \ndocuments based on Scores for the one or more linking \ndocuments, and \ninstructions for processing the linked documents accord \ning to their Scores. \n19. A computer-readable medium that stores instructions \nexecutable by one or more processors to perform a method \nfor Scoring documents, comprising: \ninstructions for Searching a plurality of documents, at \nleast Some of the documents being linked documents \nand at least Some of the documents being linking \ndocuments, at least Some of the linking documents also \nbeing linked documents, each of the linked documents \nbeing pointed to by a link in one or more of the linking \ndocuments, \ninstructions for Scoring each of the linked documents \nbased on Scores for the one or more linking documents, \nand"
      },
      {
        "type": "text",
        "page": 11,
        "content": "US 6,285,999 B1 \n11 \ninstructions for providing the linked documents based on \ntheir Scores. \n20. The method of claim 1, wherein the assigning a Score \nincludes: \ndetermining the score based on (1) a number of the linking \ndocuments that link to the linked document and (2) an \nimportance of the linking documents. \n21. The method of claim 20, wherein the importance of \nthe linking documents is based on a number of documents \nthat link to the linking documents. \n22. The method of claim 1, wherein the assigning a Score \nincludes: \nasSociating one or more backlinks with each of the linked \ndocuments, each of the backlinkS corresponding to one \nof the linking documents that links to the linked \ndocument, \nassigning a weight to each of the backlinks, and \ndetermining a Score for each of the linked documents \nbased on a number of backlinks for the linked docu \nment and the weights assigned to the backlinkS. \n23. The method of claim 22, wherein the processing of the \nlinked documents includes: \norganizing the linked documents based on the determined \nSCOCS. \n24. The method of claim 22, wherein the assigning a \nweight includes: \nassigning different weights to at least Some of the back \nlinks associated with at least one of the linked docu \nmentS. \n5 \n15 \n25 \n12 \n25. The method of claim 1, wherein the assigning a Score \nincludes: \nasSociating one or more backlinks with each of the linked \ndocuments, each of the backlinks corresponding to one \nof the linking documents that links to the linked \ndocument, \nassigning a weight to each of the backlinks, and \ndetermining a Score for each of the linked documents \nbased on a Sum of the weights assigned to the backlinks \nasSociated with the linked document. \n26. The method of claim 25, wherein the weights assigned \nto each of the backlinks are independent of text of the \ncorresponding linking documents. \n27. The method of claim 1, wherein the assigning a Score \nincludes: \ndetermining the Score primarily based on linking infor \nmation. \n28. The method of claim 1, wherein the assigning a Score \nincludes: \ndetermining the Score Substantially independent of user \nquery content. \n29. The method of claim 1, wherein the assigning a Score \nincludes: \niteratively determining the Score for a linked document, \nthe Score being primarily based on document-linking \ninformation and Substantially independent of user \nquery content."
      },
      {
        "type": "text",
        "page": 12,
        "content": "UNITED STATES PATENT AND TRADEMARK OFFICE \nCERTIFICATE OF CORRECTION \nPATENT NO. \n: 6,285,999 B1 \nPage 1 of 1 \nAPPLICATIONNO. \n: 09/004.827 \nDATED \n: September 4, 2001 \nINVENTOR(S) \n: Lawrence Page \nIt is certified that error appears in the above-identified patent and that said Letters Patent is hereby corrected as shown below: \nIn the Specification \nColumn 1, lines 13-15 should be replaced with the following paragraph: \nThis invention was made with Government support under contract 941 1306 awarded by the National \nScience Foundation. The Government has certain rights in this invention. \nSigned and Sealed this \nSixth Day of August, 2013 \nTeresa Stanek Rea \nActing Director of the United States Patent and Trademark Office"
      }
    ]
  },
  "patent_1.pdf": {
    "chunks": [
      {
        "type": "text",
        "page": 1,
        "content": "US011960514B1 (12) United States Patent (10) Patent No:: US 11,960,514 Bl Taylert et al. (45) Date of Patent: Apr. 16, 2024 (54) INTERACTIVE CONVERSATION 2013/0275164 Al * 10/2013 Grber GIOL 17/22 ASSISTANCE USING SEMANTIC SEARCH 705/5 AND GENERATIVE AI 2014/0059078 Al * 2/2014 Gulwani GO6F 16/3331 707/E17.014 (71) Applicant: Drift.com; Inc-, Boston; MA (US) 2020/0334307 Al * 10/2020 Prasad GO6F 6/9535 2021/0406260 Al * 12/2021 Sharifi GO6F 16/23 2023/0061906 Al X 3/2023 GO6F 16/243 (72) Inventors: Matt Taylert; Richmond, VA (US); 2023/0095180 Al * 3/2023 Yuan GO6F 18/2148 Bernard Ngombi Kiyanda, Mansfield, 704/9 MA (US); Maria C Moya; Everett, 2023/0177097 Al * 6/2023 Boymel GO6F 16/9535 MA (US); Joseph S: Demple, Boston; 707/706 MA (US); Matthew Pierce, Somerville; MA (US) cited by examiner (73) Assignee: Drift.com; Inc.  Boston, MA (US) Primary Examiner Leonard Saint-Cyr Notice: Subject to any disclaimer; the term of this (74) Attornev, Agent, or Firm David H. Judson patent is extended or adjusted under 35 U.S.C. 154b) by 0 (57) ABSTRACT (21) Appl. No:: 18/141,884 method of generating content in association with an (22) Filed: 1, 2023 information search and retrieval system. It begins by receiv- ing a query from a user: The query is semantically-searched (51) Int: Cl to identify a context. A conversation history between the GO6F 40/40 (2020.01) user and the system is identified. An enriched query is then GO6F 16/332 (2019.01) generated by associating to the query both the context and at GO6F 40/30 (2020.01) least a portion of the conversation history. The enriched (52) U.S: Cl: query is then evaluated/processed by a generative-AI: In CPC GO6F 16/3329 (2019.01); GO6F 40/30 response, information associated with the enriched query is (2020.01); GO6F 40/40 (2020.01) received from the generative-AI. A response to the query is (58) Field of Classification Search then generated the information, eg;, by passing the USPC 704/7 10, 257 information back to the user; by modifying (e-g . editing or See application file for complete search history. supplementing) the information to generate modified infor- mation and passing the modified information back to the (56) References Cited user; or by dismissing the information. If sensitive informa- U.S. PATENT DOCUMENTS tion is  identified in the  utterance, it is   masked prior to generating the enriched query. 11,263,277 Bl * 3/2022 Podgorny GO6F 16/3329 2012/0016678 Al * 1/2012 Gnber HOAM 1/7243 704/E21.001 15 Claims, 13 Drawing Sheets PROVIDING FIRST SET 100 OF CONVERSATIONS (ANNOTATED) TRAIN ML MODEL ORGANIZE OBSERVATION 102= AGAINST GROUPINGS SEQUENCES INTO 104 OF UTTERANCES EVENT GROUPINGS RECEIVING SECOND SET 106  OF CONVERSATIONS (UNANNOTATED) EVALUATE USING CLASSIFIER AND EVENT 08 RECOGNITION TO GENERATE EVENT-LEVEL METADATA RECEIVE QUERY AND 110- SEARCH AGAINST METADATA 112 RETURN RESPONSE Gaur days. May using"
      },
      {
        "type": "image_description",
        "page": 2,
        "content": "The image shows a patent diagram, which appears to be a flowchart or process flow for an invention related to a machine learning model used in healthcare. The diagram includes boxes that represent steps in the process and connectors indicating how these steps are interconnected.\n\nThe boxes seem to...",
        "image_path": "extracted_images\\patent_1_page_2.png"
      },
      {
        "type": "image_description",
        "page": 3,
        "content": "The image displays a page from a patent document, which includes text and diagrams relevant to the patent's description. The page number is 3, and it contains technical information, drawings of the invention's components, and the claims that define what the patent covers. This is standard for...",
        "image_path": "extracted_images\\patent_1_page_3.png"
      },
      {
        "type": "image_description",
        "page": 4,
        "content": "The image appears to be a page from a patent document, specifically labeled as \"U.S. Patent.\" It contains diagrams and text that detail various aspects of the patent application. There's a table with multiple entries and columns, indicating specific components or parts related to the invention....",
        "image_path": "extracted_images\\patent_1_page_4.png"
      },
      {
        "type": "image_description",
        "page": 5,
        "content": "The image appears to be a page from a patent application, titled \"US PATENT\". It's a digital document with a number of elements: text, diagrams, and a title that includes the words \"US PATENT\" at the top right corner. The rest of the content is too small to read or discern...",
        "image_path": "extracted_images\\patent_1_page_5.png"
      },
      {
        "type": "image_description",
        "page": 6,
        "content": "The image shows a page from a patent document. It's a schematic diagram of an electronic device, possibly an MP3 player or a similar gadget. There are two main sections: one on the left side depicting the front view of the device with various buttons and controls, and another on the right side...",
        "image_path": "extracted_images\\patent_1_page_6.png"
      },
      {
        "type": "image_description",
        "page": 7,
        "content": "The image shows a U.S. Patent document, specifically page 7 of a patent with number \"1.\" It includes a flowchart, labeled as \"FIG. 5,\" depicting a process involving steps such as \"USER ACCESS,\" \"SELECT,\" and \"CONFIRM DATA.\" The flowchart appears to be part of the patent's description of an...",
        "image_path": "extracted_images\\patent_1_page_7.png"
      },
      {
        "type": "image_description",
        "page": 8,
        "content": "The image shows a patent drawing from US Patent #1,056,796, dated April 22, 2013, and assigned to Honeywell International Inc. It's a diagrammatic representation of an inventor's concept or idea, likely related to technology or machinery given the complexity of the schematic. The drawing includes...",
        "image_path": "extracted_images\\patent_1_page_8.png"
      },
      {
        "type": "image_description",
        "page": 9,
        "content": "The image shows a patent diagram with two main parts labeled \"Patent 1\" and \"Patent 2.\" Patent 1 features a structure with multiple components including a central processing unit (CPU), an input device, and a display device, all interconnected by lines indicating their functional relationship....",
        "image_path": "extracted_images\\patent_1_page_9.png"
      },
      {
        "type": "image_description",
        "page": 10,
        "content": "The image shows a page of a patent application. It appears to be a technical diagram related to an invention, possibly in the field of electrical or mechanical engineering. The diagram includes various components connected by lines, with labels and numerical references indicating their arrangement...",
        "image_path": "extracted_images\\patent_1_page_10.png"
      },
      {
        "type": "image_description",
        "page": 11,
        "content": "The image is a screenshot of a patent document page, showing two different figures: Fig. 9 and Fig. 10. Both figures are flowcharts related to software or technical processes. The text in the figures indicates that they describe algorithms for performing tasks in a computer system, with specific...",
        "image_path": "extracted_images\\patent_1_page_11.png"
      },
      {
        "type": "image_description",
        "page": 12,
        "content": "The image shows a U.S. patent application document, specifically page 1 of 12, titled \"Patent\". There are two figures in the image: Figure 9 on the left and Figure 10 on the right. Both figures appear to be diagrams or illustrations related to the content of the patent application. The text within...",
        "image_path": "extracted_images\\patent_1_page_12.png"
      },
      {
        "type": "image_description",
        "page": 13,
        "content": "The image shows a patent document page, featuring an example of a computer program interface and its corresponding textual description. This particular patent is for US Patent No. 7,425,689 from April 14, 2015. It pertains to the US PTO, as indicated by the heading \"US Patent Application\". The page...",
        "image_path": "extracted_images\\patent_1_page_13.png"
      },
      {
        "type": "image_description",
        "page": 14,
        "content": "The image appears to be a patent drawing with a detailed schematic of an inventor's design. It includes various components labeled with text, indicating the structure and function of each part. The drawing style is technical, emphasizing precision and detail to convey the invention's...",
        "image_path": "extracted_images\\patent_1_page_14.png"
      },
      {
        "type": "text",
        "page": 15,
        "content": "US 11,960,514 Bl 2 INTERACTIVE CONVERSATION According to one aspect, a method of generating content ASSISTANCE USING SEMANTIC SEARCH in association with an information search  and retrieval AND GENERATIVE AI system is described. The method begins by receiving an utterance from a user: The utterance (a *query\" is seman- BACKGROUND tically-searched to identify a context associated with the query. In addition; preferably a conversation history between Technical Field the user and the information search ad retrieval system (typically the history that includes the query utterance) is This application relates generally to information retrieval identified. An enriched query is then generated by associat- methods and systems. 10 ing to the query both the context and at least a portion of the conversation history: The enriched query is then evaluated/ Background of the Related Art processed by a generative-AI, such as a transformer-based language model. In response to that processing; information Online conversational marketing is a well-known tech- 15 associated with the enriched query is received  The infor- nique designed to move buyers or prospects through mar- keting and sales   funnels through the power of real-time mation is the response to the enriched query that is generated conversations. In this approach, and instead of forcing users by the generative-Al model. A response to the query is then to go through lead  capture forms and wait for a generated using the information; e.g, by passing the infor- response, conversational marketing uses targeted messag- mation back to the user in response to the utterance, by live chat and intelligent conversational bots (chatbots) 20 modifying (e.g,, editing,  supplementing  or the like) the to engage with users when visit a website (in real-time, information to generate modified information and passing or through other channels, such as SMS or email). A chatbot the modified information back to the user; by dismissing the is a software application that executes on the site and that is information; or otherwise) If   personally-identifiable or used to interact with the user; often in lieu of a direct human other  sensitive information is identified in the utterance, interaction:   Typically, conversational bots are 0f several 25 preferably it is   masked or   Otherwise   obscured prior to types A rules-based chatbot follows pre-designed rules that generating the enriched query: The information may also be form a decision tree. Decision trees are simple fed back to a semantic search generative model to improve created by hand: are easy to build; but brittle, and the semantic search function going forward. do not scale. Also, in use, decision trees are proactive, as The foregoing has outlined some of the more pertinent control the bot to lead the conversation; typically by 30 features of the subject matter: These   features   should be asking lots of questions. A more sophisticated approach is an construed to be merely illustrative. Many other beneficial Artificial Intelligence (Al)-based chatbot that uses a differ- results can be attained by applying the disclosed subject ent approach from decision trees, namely, intents Intents use matter in a different manner Or by modifying the subject machine learning to classify a user' s input, and then activate matter as will be described a corresponding skill: The skill is a context that either uses 35 a graph to direct the flow (like a decision tree) or it has a set BRIEF DESCRIPTION OF THE DRAWINGS of slots that need to be filled by asking questions  Intent- based bots are more robust than decision tree bots, but For a more complete understanding of the subject matter are not very flexible to context switches once an intent is and the advantages thereof; reference is now made to the activated. Intent-based bots are reactive; wait for the 40 following descriptions taken in conjunction with the accom- user to take the lead to tell the bot what he or she wants to panying drawings, in which: do, or what he or she wants to know. Examples of intent- FIG. 1 depicts a method for event-based semantic search based bots include Apple€ Siri, AmazonD Alexa, Googled and retrieval according to the techniques of this disclosure; Home, and the like: FIG . 2A depicts a representative instance of an \"Offer As valuable as chatbots are as an alternative to human 45 Meeting\" event and its associated tagged entries, in this case agents a Sales Development Representative (SDR)), representing a meeting offer and its acceptance; there may be circumstances where it is desirable to direct an FIG . 2B depicts  another representative instance of a inquiry to an agent in a live-chat mode. For an agent that \"Offer Meeting\" event and its associated tagged entries, in needs to answer many conversations quickly, there is a need this case representing a meeting offer that is declined; to provide = a way to give the agent a head start on composing 50 FIG. 3 depicts a example of event-level metadata cor- his or her responses. In particular; when a new message from responding to an utterance; a lead comes in to a conversation for which the agent is FIG . 4 is a block   diagram   depicting an information responsible, he or she wants (and is expected to) answer that retrieval system in which the technique of this disclosure question as quickly (s possible) so that the lead can be may be implemented; progressed down a sales funnel or other service or support 55 FIG. 5 is a block diagram of a relational database com- workflow prising a set of inter-related data tables in which a corpus of annotated conversation transcripts is organized to provide BRIEF SUMMARY storage-eflicient informational retrieval; FIG. 6 depicts a representative data model that is persisted To that end, this disclosure describes a method and system 60 in a database and represents a conversational history for a for providing an interactive conversation tool that enables a particular conversation or session over one-to-many turns; service provider ad its customers to generate more accurate FIG . 7 depicts a representative system interaction show- and relevant answers to outside inquiries during such con- ing processing of a user query; and versations, e.g , a live-chat mode with an agent; a conver- FIG. 8 depicts a general architecture for a live-chat sation that occurs in association with other process automa- 65 assistance system architecture of this disclosure; tion, and the like The approach leverages semantic search FIG. 9 depicts a representative request   directed to the and generative-Artificial Intelligence (Al) suggested replies API of this disclosure; days ing, they graphs They they they they they (e.g ,"
      },
      {
        "type": "text",
        "page": 16,
        "content": "US 11,960,514 Bl FIG. 10 depicts a sample response as retured to the for expressing it, and typically it can be expressed in many suggested  replies API from an external   generative AI different ways to accomplish the same The utterance request; may be typed text (e.g, in a chat window), transcribed from FIG. 11 depicts a representative request  directed to a spoken audio, or the like: semantic-search API sub-component by a generative chat 5 Utterance: a sequence of words that is grammatically app API; complete; usually one sentence_ FIG. 12 depicts a sample response as retured to the Multi-turn conversation: typically, an interaction between generative chat app in response to the request shown in FIG. multiple human actors, or an interaction between an end user 11; participating in a chat; and a conversational bot, typically FIG. 13 depicts a representative  request  directed to a 10 over   multiple question and answer cycles. A multi-tur motivation API sub-component by the generative chat app conversation may involve more than one human user; and API; more than one bot. For example; a bot may be configured to FIG. 14 depicts a sample response as returned to the talk to multiple users concurrently (eg-, participants in a generative chat app in response to the request shown in FIG. ZoomO web` conference)  Generalizing, a multi-turn con- 13; and 15 versation can be from human-human; or human-bot conver- FIG. 15 depicts a specific implementation ofthe system of sations, including a mix thereof: Conversations may derive this disclosure. from multiple and disparate data sources, such as voice calls, conversational bots, web-based conferencing, and so forth: DETAILED DESCRIPTION Event-Based Semantic Search and Retrieval 20 The techniques herein may leverage sevent '-based The   techniques of this disclosure   leverage semantic semantic search and retrieval, which is now described. As search and inforation retrieval that is context-based, noted; an event as described herein is composed of a erably leveraging the informational structure of e.g,, sequence of observations that are user speech or physical that are captured from historic human-human and/or human- actions. A speech act is a labeled grouping of semantically- bot interactions. 25 similar  utterances, and a physical  act is a non-linguistic By way of background; the following is a glossary of action taken by an actor: terms that are used herein: According to one embodiment; and as depicted in the Event: a sequence of observations,  recognizable as a process flow shown in FIG. 1, a method to provide event- coherent behavior: Observations within the sequence can be based semantic search and retrieval begins at step 100 by an arbitrary mix of speech acts  and physical acts, from 30 providing a set of first conversations that have been anno- multiple  actors_ One event can be  represented by many tated (e-g , by human actors to identify speech acts, physical different possible expressions of that event acts, and events_ The set  of first   conversations may be Event expression: one specific sequence of one or more relatively   small in  size severa] hundred   historical observations that can represent some event: An event may conversations  and are preferably used in two (2) ways: unfold in many different ways, i.e.= there may be many 35 (1) (at step 102) training a machine learning model different sequences of saying things, and taking physical groupings of utterances (in the first conversations_ to gen- actions erate a classifier of speech acts, and (2) (at step  104) Event recognition: inferring which event is unfolding, or organizing observation sequences (in the first conversations_ has unfolded, by comparing a sequence of observations to into groupings of events that are configured for subsequent sequences that compose the expressions for some event; 40 sevent recognition ' A preferred technique of event recog Event aliasing: inferring which event is unfolding, or has nition is the one that will be described in more detail below, unfolded, with an inexact match: When an exact sequence is and it  involves event pattern  matching  against a set of not recognized, a closest inexact match can be determined inter-related data tables that are organized to facilitate effi- and presented as an alias such that further processing can cient   lookup and  information retrieval: In an alternative then be performed as if the closest inexact   match was 45 embodiment, event recognition is carried out using an event recognized as a known sequence. classifier that has been   trained to recognize events, e.g; Observation: an atomic action taken by an actor; Each statistically. After the set of first conversations are processed action may be a physical act or a speech act. One or more in this manner; the method continues at step 106 by receiv- observations may be intermingled between or among events ing a set of second conversations_ The set of second con- as the events unfold in parallel, in which case the events 50 versations, however; are unannotated. Typically, the second themselves are active (in time) concurrently. Each observa- set of conversations are received as a data stream in real- tion is a member of one event; but as noted events can time or near real-time (in other words, as the conversations overlap in time, e.g , given observations 1-4, observations are taking place) This is not a limitation; however: In an and 3 may be part of event 1, while observations 2 and 4 may alternative   embodiment;  the second set of conversations be part of event 2, such that events 1 and 2 are both active 55 comprise an organization'$ historical corpus of conversa- over a time period, As this example shows, observations tional transcripts and are retrieved from a data store or some from different events may be arbitrarily sequenced among other data repository: At step 108, the set of second conver- observations from other events_ sations is then   evaluated the   speech act   classifier Physical act: a non-linguistic  action taken by an actor; trained in step 102 and information retrieved from event eg, clicking a button or a link on a Graphical User Interface 60 recognition (using either event pattern matching or the event (GUI)  entering data in a form, or the like A physical act also classifier) carried out the event groupings created in be received via more sophisticated data entry mecha- step 104, thereby generating a set of event-level metadata. nisms,  such as a gesture-based   interface that reads and The event-level metadata comprises, for each utterance or interprets facial expressions, biometric devices that receive physical action within an event; one or more associated tags and interpret physical features or movements, etc. 65 that are configured for eflcient querying: Speech act: an utterance   expressed by one actor to At step 11O, and in response to receipt of a query a search another; in natural language. A speech act has some purpose is performed against the event-level metadata. The query thing: pref- dialogs, ' (e.g;, they against using against may"
      },
      {
        "type": "text",
        "page": 17,
        "content": "US 11,960,514 Bl 5 may be an  utterance, some ungrammatical collection of from a dropdown menu or the like, and wherein the query words, a search-related activity (eg-, selecting an entry from (with or without filter criteria) is formulated based on the a pull-down list o radio button, entering information in a activity. 59 form; etc.), ad the like. A query may include one or more As used herein; a refers to an attribute, a property, filter criteria. As noted above, and because the event-level 5 a characteristic or the like associated to a given utterance metadata has been obtained in part through the event rec- that has been identified by the speech act classifier: Accord- ognition, the search is semantic in nature but carried out with ing to one preferred   embodiment; one type of tag is a 66_ respect to \"events  99 that have been learned from the set of \"moment of interest\" (or moment where the Sinter- est depends on the use case_ For example, and in the case first  conversations_ In this manner; the technique of this 10 of a CRM system or the like, the key moment may be an disclosure exploits the informational structure present in the \"offered meeting\" moment, or a \"\"pricing' moment: Because dialogues that have been captured in the historical tran- the system works on events, a key moment may span scripts, as opposed to merely relying o simple keyword multiple utterances or actions (possibly organized into turns_ search; or even semantic search over clustered utterances within a transcript and forming an event, ad there may be At step 112, a response is returned to the  query to 15 multiple instances of the same or different moments complete the method. According to this disclosure, typically within one  conversation Thus, preferably a tag has an the response is a set   of one or more conversations or associated instance identifier and step identifier representing conversation fragments (derived from the first set of con- the particular instance of the moment; and the relative versations that; from an event-based perspective, are location within the event representing the moment. semantically-relevant to the query: These conversations (or 20 Typically, a query to the event-level metadata seeks some fragments) typically  comprise a list   of events that are conversational moment of interest t0 the user: Based on the associated t0 the query and that were found in the set of first event recognition,  the conversational moment of interest conversations_ Typically, an event  returned in the list of typically is embodied in one a speech act label output events is an event that is present in the set of first conver- from the speech act classifier; and an event label derived sations explicitly, but this is not a requirement As described 25 from a table of events (when event pattern matching such as in further  detail below (concerning \"event aliasing\"), an described below is implemented). In a variant embodiment, event identified for inclusion in the response may be an a moment refer to a grouping   of speech act inexact (albeit close = match to an event actually present in classifier labels, or one or more event labels, such that a the first set of conversations_ The ability of the system to one-to-many approach is realized. provide event recognition that includes aliased events pro- 30 As noted above, an additional benefit of event-based vide additional flexibility and enables the semantic retrieval searching as described herein is the ability to filter query to reach even more potentially-relevant information. results by some aspect of the returned data_ For example, The set of first and second conversations may have one or with an utterance-based search (as in the prior art), it might more turs_ As noted above, in a multi-turn use case, a turn be possible to find conversational fragments that begin with typically captures all consecutive utterances from a given 35 a sales representative offering a meeting; with event-based (same) conversational entity. Typically, at least some of the search according to this disclosure; it if further possible to conversations in the first and second sets are derived from find conversational fragments where the  representative one of: a human-to-human   interaction, and a human-to- offered a meeting but where the prospect declined. On an conversational bot interaction. A three-way interaction (hu- utterance-based level, searching for the prospect declining a man-to-bot-second human) may also be captured: 40 meeting is likely impossible because the language is too As noted above, the nature of the query may vary, but ambiguous and could occur in too many contexts (e.g. `no typically the query is an utterance, or perhaps some ungram- thanks or 'not yet\"). In contrast; event-based searching as matical collection of words. The manner in which the query contemplated herein makes it possible for the system to find is received by the system varies and is  implementation- conversational fragments where a prospect says \"no\" or \"not specific. In one   embodiment;  the set of utterance-level 45 after a representative offered a meeting metadata that is created (step 108) typically is stored in a Semantic-based search of the informational structure of a data store or computer memory: That data is then accessible dialogue according to the process flow in FIG. 1 provides from a search application (or web page) using by a user via significant advantages, as it enables event-based searching an input device such as a client application or browser: In of conversation text based on semantic clustering instead of one use case, an event-based information search and 50 raw words   (keywords) or surface form, and it returns retrieval is carried out *aS-a-service  that is network-acces- sequences of utterances and physical actions that are sible. The user queries the service using a browser; the nizable as coherent, meaningful key moments. Events may event-based semantic search is carried out the event- be arbitrary in length and include utterances (and physical level metadata, and the response is returned to the user over actions, that are fluidly or arbitrarily intermixed: The tech - the network: In an alternative embodiment; the search query 55 nique facilitates conversational analysis and semantic is carried out with data and resources co-located (e-g-, in an searching with respect to multi-turn conversations (although on-premises computing system having the utterance-level this is not a limitation), providing rich event-based detail metadata available locally) As also noted, one or more filter about how a conversation transpired or unfolded. criteria may be to the query, e.g-, when the user As one example use case, the approach herein enables enters the query in a search field; the filter criteria be 60 enterprises and organizations (e-g , marketers to mine and identifiedselected explicitly or perhaps entered by the user find relevant conversations (or conversational fragments = in manually: In addition; or in the alternative, filter criteria may their data in an efficient and useful manner: As a specific, but be applied to a response (as opposed to the query itself), such non-limiting use case; an organization uses the above- as when a set of conversations or conversational fragments described semantic search functionality in association with are first  returned to the query: The query  itself may be 65 automatic sales deal review The organization captures his- explicit; but this is not a requirement; as an alternative query torical transcripts from human-human conversations, may simply involve a search activity such as a selection human-bot conversations, and the like. Using the semantic sstag skey key key key of: key may yet? recog- against applied may"
      },
      {
        "type": "text",
        "page": 18,
        "content": "US 11,960,514 Bl search (or semantic timeline labeling) for events as multiple moments_ Another way this may occur is if a described herein, one or more events may then be queried moment associated with an event is mixed together with for relevant moments_ For example; assume that a a moment  associated with  single  utterances (speech search for the key moment \"Offer Meeting\" has been initi- acts), e-g,, where one utterance may be part of an event and ated. There are many ways in which this  search can be 5 also a speech act (called out as its own moment). carried out: In one embodiment; the user searches for event According to a variant   embodiment;  the event-based instances of the moment using a drop-down menu that semantic search and retrieval as described above may be lists the available moments.  In an alternative embodi- combined with a keyword-based search: In one approach; ment, the user searches by typing a query that he or she the keyword-based search is used as a fallback (or fail-over believes will generate relevant responses, such as swould 10 when the results returned for the event-based query do not you like a meeting?\" Assume now that a query has been provide a good or acceptable match according to some made: Within the data structures maintained by the system; criteria (e.g: a configured confidence level): one of several possible responses is available: FIG . 4 depicts a representative information retrieval syS- In   particular; one possible response is the event 200 tem in which the techniques  of this   disclosure may be instance   depicted  in FIG. 2A (for the \"Offer  Meeting\" 15 implemented  This system may be used to capture human- event), with  its   associated  sequence of observations that human  conversations,  human-bot   conversations, and the have been identified from the conversation between the sales like. representative and the prospect. As depicted, each utterance For example, assume that the system is used to capture or physical action in the event has an associated set of tags, human-bot   conversations and, in particular; a multi-turn namely: observation; moment, instance ID, and step 20 conversation is carried out between an end user 400, and a index. Thus, for example, the utterance *would you like to conversational bot software application 402 that executes in schedule a meeting with one of our account executives to a network-accessible computing   platform 404. In this 99 learn more has been classified in an \"ask_meeting\" cluster; example scenario, the end user 400 is a human being that it is associated with the *Offer Meeting' moment; which interacts with the platform, typically using a client machine has the instance ID-3_ Because the utterance is the second 25 406 having a browser or mobile application (app): In a one in the event; it is given the step index--2. Note also that; typical user case, the software application 402 executes in in the example, the last entry in the list of observations is a association with a website 408, although the chatbot func- physical action; which also includes its associated set of tags tionality may be utilized by multiple distinct websites oper- that can be queried  As also shown, the event 200 includes ated by separate and independent content providers. As such, the prospect S utterance  Yeah; I hope to get going with your 30 the computing platform provides the chatbot functionality in platform ASAP; and thus event 200 represents a conversa- a multi-tenant operating environment, although this is not a tional  fragment in which a meeting was offered and also requirement. The user provides   input  to the chatbot as accepted. In FIG . 2B, in contrast, another possible response speech; as one or more physical actions selecting a is the event instance 202, which like event 200 in FIG. 2A4, button or link, entering data in a field, etc.), or as some is also associated with the moment of interest (Offer 35 combination of speech and physical action: In this example, Meeting\"). In this example, however; the prospect declined the chatbot 402 is an AI-based   conversational bot. As the opportunity as indicated by the utterance thanks; depicted in FIG: 4, here the platform is configured with a which has the Instance ID-5 and the step index--3. Event network-accessible front end component 410, together with 202 also includes a first utterance that   the   system  has an Application Programming Interface (API)-accessible associated with an ~notice_questions\"   cluster while the 40 back-end system 412. The API is depicted at 414. In this follow-on utterance has been associated with the *ask_meet- example, the back-end system executes an instance of the ing\" cluster: software application 402 for each multi-turn conversation Both events may be returned with respect to the query that and, in particular; it provides both an understanding of a seeks just the 66 moment\" of \"Offer Meeting: But where user S query (a speech and/or physical input); as well as a the   search is more specific, both  examples also   support 45 possible response to this  query   Typically, the   front-end filtering the search results, e.g: to find only fragments where system handles inputs from multiple end users that access a meeting was declined (in which case, only the event 202 the platform, and individual responses as determined by the identified in   fragment   in FIG . 2A is retured). In   this back-end system (and in particular the software application example, the  approach also enables filtering out other instance that is managing the particular multi-turn conver- examples of *no; e.g,, that  occurred in other contexts 50 sation) are passed from the back-end to the front-end for unrelated to a meeting offer: delivery to the end user: In the context of a chatbot; the Generalizing, typically a query is an utterance, as in the response typically is provided in a chat window. example above for the phrase *would you like a meeting?\" During a multi-turn conversation between the user and the In the usual case; a classifier is ru on the utterance to conversational the system responds to a user input in determine the speech act observation of that input: From 55 less than a given time period a few seconds) given there, and as has been described; the system looks up what network latency and transit time, and that such response is events that   speech   act occurs in, as well as what both correct and coherent with respect to the history of the moment(s) that event is associated with (because a conversation S0 far; i.e,, the history ofprevious utterances or moment can map to a grouping of events) The system then physical actions by the user: To this end, information searches the tags for that moment to retur a response. 60 which a query is processed preferably is organized in a Without   intending to be limiting,  FIG. 3 depicts an particular manner: This information typically is a corpus of example representation (e.g,, in JavaScript Object Notation historical  conversation  transcripts that are first annotated (JSON) format) of event-level metadata 300 corresponding (e.g,, by human analysts) to provide an inforation data- to the identified utterance 302. The event-level metadata base, e.g,, queries and associated responses; that have been comprises a set of 'tags as shown and, in this example, there 65 generated by the system previously. The nature and scope of is a single moment associated with the event_ As noted the annotations are implementation-specific, but the notion above, however; the same event may be associated with is that the database provides a large corpus of possible key key key key key key key key key (e.g;, key s'No, key bot, (e.g;, key key against key key"
      },
      {
        "type": "text",
        "page": 19,
        "content": "US 11,960,514 Bl 10 conversational flows that the system may then use during a example the <Offer_Demo_ In this example, the utterance real-time multi-conversation between the user and the chat- cluster is common to utterances 612 and 614 <Would bot. you like to schedule a demo?  or 66 ) Would you like to see how As shown in FIG . 5,the conversational transcripts 500 are the app works on a website?) Although just two utterances annotated and then re-organized into a set of inter-related 5 are depicted for the cluster; there may be any number of data tables that are structured in a specific manner to enable utterances_ The entities 602,606, 608, 610, 612 and 614 thus the system to make discrete comparisons between a live comprise a hierarchical representation of a first observation conversation (i.e-, & current one and a cOrpus of conversions in the sequence of observations that comprise the event, and that have been seen in the past (i.e. the annotated historical this activity is implemented by the chatbot. conversations) This re-organization is sometimes referred 10 More generally, utterances such as described preferably to herein as packing: The set of data tables comprises an are used as training data for a machine learning (ML)-based event bindings table 502, an events table 504, an observa- statistical  classifier;  upon  training, the classifier IS then tions table 506, a physical acts tables 508, and a speech acts useful for both checking for exact matches, as well as for table 510. The event bindings 502 table stores a set of event further generalization; finding other wordings that have bindings, which are entities that connect lines of transcripts 15 a similar meaning to words and phrases recognized by the with  whatever events these lines have been annotated to classifier represent   in the   transcript: The events table 504 stores Referring   back to FIG. 6, and   continuing with the pointers to events, wherein an event typically is composed example, the second observation 604 represents the user' $ of a linear   sequence of observations that represent an response to what in this example is a prompt from the bot In expression of the event: The observations table 506 stores 20 particular; the observation 604 is associated with physical pointers to observations that are either physical acts in the act 316 having identifier \"87302, which is another entry in physical acts table 508, or speech acts in the speech acts the   observations data   table. In this   portion of the tree, table 510. As will be described, information in the relational conversation participants are reversed; such that in entity database is searched in response to physical acts or speech 618 the actor is the user; and the *target of the physical acts, and the latter typically are organized as clusters of 25 act is the bot. As also depicted, physical act 616 also points utterances 512. As defined above, an utterance 514 typically to a particular button 620, representing the user responding 66 is a grammatically-complete set of words,  nominally a that he or she wants to see the demonstration (the Yes_ 5) complete sentence. Thus, andas depicted; the event bindings Demo\" action) The data model continues (on the right) with (event   expressions) to events, which to the the next follow-on observation, eg-, an utterance by the user; observations,  either  physical or speech acts As will be 30 another physical act, and so forth: described; this layout of the relational database enables the The data model represents each event as composed system to place an utterance or user action into its appro- of an observation sequence, which is sometimes referred to priate context in a highly-efficient  manner; thereby giving herein as an observation history. As the data model is the user input meaning within the conversational flow. In persisted (and in the depicted tree grows right-ward), the particular; the tables allow the system to efficiently search 35 conversation history between the user and the bot is repre- for all instances of an utterance or action (speech or physical sented. In particular;  and at any in the multi-turn act) within the annotated transcripts. Typically, the relational conversation; the data model  comprises  the observation database tables are continually updated as the system inter- history, namely, a hierarchical set of events that have been acts with end users; in one embodiment; the data tables are determined to represent the conversation up to at least one repacked periodically, e.g, every 10-20 minutes, although 40 conversation turn (and typically many turns) More this is not a requirement. cally, the data model is the observation history (everything Efficient querying is facilitated by representing observa- said, and every button clicked, since the beginning of the tions as either speech or physical acts, and which are taken conversation),   and a tree of events  that the system has by   either actor (conversation  participants) and that are overlaid on top of the observations to represent the system'$ fluidly intermixed to form events. To this end, and according 45 best guess at explaining how a linear sequence of observa- to a further aspect of this disclosure, as a multi-turn con- tions breaks down into coherent fragments of conversation: versation proceeds, the system   generates and persists in Persisting a data model that is built in this manner (and memory a data model (or, more generally, a data structure , based on both utterances and physical  actions) provides that represents a conversation history between the user and significant advantages because real conversations do not the bot. Generally, the data model comprises an observation 50 always   unfold  neatly into a linear   sequence   of topics. history, together with a set of events that have been deter- Instead, often are typically messy, fluidly oscil- mined to represent the conversation up to at least one turn lating between several topics  FIG . 6 depicts an  example of one such data  model: As The data model keeps track of any number of events, all depicted; event 602 has a particular event identifier of which can be actively *extended\" at ay time. An event <787968, which is an entry in the events table. The event 55 can be extended when appending an identified observation has a particular type, in this example \"Schedule_Demo. creates a new sequence of observations that exactly matches Based on the conversation so the event is composed of an existing event expression: Thus, an event can be extended a sequence of observations (looking left to right) including if appending the most recent   observation creates a new an observation 603 (identifier *765576, which is an entry in (longer) sequence that exactly matches a sequence in the the   observations   table); and observation 604   (identifier 60 events table of the relational database. As noted above; the 84453, which is another entry in the observations table) events   table which the matching is attempted is Observation 602   points to a speech act 606   (identifier populated during packing, based on human annotation of <53709, which is an entry in the speech acts table), which events found in real human conversation transcripts. When speech act in turn is associated to the conversation partici- appending an observation to an existing event expression in pants 608, in this case wherein the *actor is the bot and the 65 the data model is not possible, the system determines if it can slistener is the user: As also indicated; the speech act 606 create a new event with the observation then being the initial has   been associated to an utterance   cluster 610, in this observation for the new event sequence. In circumstances (e.g;, fast; i.e., point point being point specifi- they quite far; against"
      },
      {
        "type": "text",
        "page": 20,
        "content": "US 11,960,514 Bl 11 12 when a particular observation does not fall neatly within an is required for each database access (although there are event expression (i.e,, it cannot be used extend the event), or typically several of such accesses as will be described): when the observation does not make sense as a new event_ At a high level, the system 700 comprises several main the system then provides a fallback (or failover) operation to components including an event recognition sub-system 704. enable   processing to continue efficiently: This fallback 5 The event recognition sub-system 704 has several  basic operation is referred to herein as event aliasing: functions Initially, and upon receipt ofa new user input, the Event aliasing refers to the notion of inferring  which event recognition  sub-system 704 tries to decide how to event is unfolding; or has unfolded, with an inexact match: interpret what was actually said to the bot given what has In particular;  when an exact sequence is not recognized, been observed previously: Typically, an input can be suc- preferably a closest inexact match is determined and pre- 10 cessfully interpreted if two conditions are met: (1 ) the user'$ sented as an alias such that further processing can then be input can be recognized as a speech act or physical act that performed as if the closest inexact match was recognized as exists as an observation in the historical data, ad (2) this a known sequence _ When an aliased event is created; the observation can legally extend an event or start a new event, system then proceeds to process the alias event as the event giving contextual meaning to the observation. being spoofed (and thus no longer sees the inexact match). 15 As noted above, event recognition is the process of first Aliasing may be carried out either to extend an event (an trying to extend an event, or adding a new event; or (failing saliased extension\"), or even to create a new event (aliasing those options) performing aliasing: In general, this evalua- a new event\" ). Preferably, the system first tries to extend an tion is carried out using an initial lookup into the database event (using a exact match); then, if extending an event of historical transcripts to identify one or more candidate fails, the system then determines if it can create a new event 20 interpretations, followed by a filtering of the candidates for (if this can be done logically given the conversation history coherency (sometimes referred to herein as \"coherency SO far): Once the latter option fails, the system fails over to filtering\") . More forally, a candidate interpretation typi- attempt to generate a aliased extension ad, failing that; cally corresponds to some human annotation found in the performs aliasing for a new event_ Event aliasing is advan- historical conversation transcripts that were indexed tageous, as it enables the system to provide coherent and 25 the packing operation In one exemplary implementation; appropriate responses even when the database lookup does the candidate interpretation is a pointer identifying specific not return exact (or otherwise useful) results_ The mecha- lines of historical data in the set of inter-related tables that nism enables the system to pretend it has seen a sequence of comprise  that relational   database 402. Another way of observations that exactly matches something in the database, describing a candidate interpretation is as an instance of when in reality the system observed something very similar 30 observations, e-g-, oe candidate interpretation might be a but that; e.g. skips an utterance in the middle, re-orders two specific utterance in a specific transcript that expresses the utterances within the sequence; or the like. Event aliasing speech act 66 hello with the line 66 man nice t0 see you. enables to system to operate coherently even when there is Multiple candidate interpretations are identified by a set of no exact match for a sequence that can be extended with the pointers to specific lines in the  transcripts,  representing most   recent  observation:   In this  manner; the sequence is 35 instances of observations. auto-corrected to something that is close enough to what has Preferably, the input to event recognition sub-system 704, been observed. This approach ensures that the rest of the where the system tries to extend an event, etc-, is represented system functions efficiently with exact look-ups into tables as a sequence of observation identifiers (IDs), rather than within the relational database_ instances. An ID is akin to a type of observation that may The intelligent packing of the relational database, and the 40 appear many times in the annotated historical data, rather use of the data model structured as described, enables the than one instance of an observation with that ID. To take a system to participate in a multi-turn conversation; coher- concrete example, assume the user utterance is *hello kind ently,  and  quickly: The   system has several options for sir The classifier is run against the utterance, and in this flexibly understanding the meaning of a utterance; where example the classifier assigns the utterance the speech act aliasing is the fallback, and where meaning is ascribed based 45 label *hello_ From this, the system looks up a speech act ID on which observation is seen at which step of an event (for this label) from the speech acts table: Then, from this within a sequence of events that compose a conversation_ speech act ID, the system looks up an associated observation Events are of arbitrary length, and can overlap in time ID in the observations table. These lookups typically are with other events Thus, ad although not depicted in the done at once, through SQL table joins. After determining example event hierarchical representation shown in FIG. 6, 50 what observation ID  hello kind sir\" maps to, the system multiple events may be active concurrently: tries to use this observation ID to first extend an event: To In this example depicted in FIG. 6_ two different utter- this end, preferably the data model is updated to reflect that ances are indicated as being members of an utterance cluster: the event is extended (at this point, merely an assumption Preferably, and mentioned above; the system defines utter- that the event can be  extended); and it is  the resulting ance clusters by training a machine learning (ML) classifier: 55 modified event that the system then uses to perform the A conversational bot system 700 is shown in FIG. 7. The initial lookup described above, namely, to fetch the one or system is configured to process a query (e.g; a user utter- more candidate interpretations  These candidate interpreta- ance or physical act) within a given turn of the multi-turn tions are instances of observations with the observation ID conversation_ It assumes that the corpus of annotated con- previously mentioned, e.g,, where the system found versation transcripts is packed into a relational database 502 60 like *hello comprising the set of inter-related tables as shown in FIG. 5. In addition to obtaining the oe or more candidate inter- As noted, preferably these tables include a table of events, pretations, the event recognition sub-system 704 evaluates a table of observations, a table of physical acts, and a table the candidate interpretations that it fetches, with the goal of of speech acts As will be described, the relational structure identifying  one  candidate interpretation that it will then includes the pointers (keys) identified, and preferably look- 65 provide to update the data model. In this initial pass, the ups in to the database are performed on a constant-time basis event recognition sub-system 704 functions to attempt to such that only a single database query into the data structures understand the user's input. A mechanism 708 for perform- during hey they things"
      },
      {
        "type": "text",
        "page": 21,
        "content": "US 11,960,514 Bl 13 14 ing this function preferably comprises a set of evaluation CriticStaleExtension -after some number  0f  conversa- agents that are sometimes referred to herein as \"critics tional turns have passed, it becomes unlikely that something Critics preferably operate over candidate interpretations. As someone just   said is supposed to be   interpreted as an used  herein, a critic   typically is a software agent (e.g,, extension of something said ag0 in the conversation. implemented as a Python class) that evaluates a candidate 5 This  critic rejects an interpretation that tries to extend an interpretation against a statistical model, a set ofhard-coded event that has not changed in the recent several turs. rules; or some other data or criteria, in each case to deter- CriticExtendedEventTypeChange ~sometimes extending mine whether the candidate interpretation should be used to an event with one more observation changes the label (and potentially update the data model. Preferably, there are a thus the meaning) of that event: The system needs to be plurality of separate and distinct \"critics; with each critic 10 careful about allowing a semantic   shift like this. If the providing a particular type of analysis, and a particular original event was not an alias, and changing the event label candidate interpretation must pass each and every critic. In leaves it in a position in the conversation history where this other words, preferably the critics collectively provide a ordering of events has not been observed, then the label Boolean AND function such that a candidate interpretation change (via the event extension) that would lead to this is not accepted for use to update the data model uless all 15 unfamiliar ordering of events is not allowed critics are satisfied. Although this approach is preferred, the The above example agents are not intended to be limiting: all-or-nothing criteria may be relaxed The nature and pro- The above description of event recognition is not intended cessing performed by a critic may vary from computation- to   imply an active   operation;  for semantic search and ally-simple tasks (e.g-, evaluation ofbusiness logic), to more retrieval the  system runs in a passive mode that   only complex evaluation tasks (e.g , evaluation against a statis- 20 observes and does not taken action within a particular active tical model) The critics may be arranged sequentially, such conversation that the more computationally-simple tasks are tested before Live-Chat Mode Suggested Replies the more complex ones. Critics may also operate in parallel With the above as background, the following describes with one another; and one or more critics may be combined the interactive conversation live-chat) assistance into a single critic. In this manner; the critics selectively filter 25 method and system of this disclosure. As a shorthand, and the candidate interpretations so as to ensure that the bot without intending to be limiting, this functionality is referred 66 operates coherently and consistently given the conversation to as 'suggested replies:_ As will be seen,  the approach so far leverages a generative AI a language model such as As noted above, event recognition tries to extend an event OpenAI ChatGPT) to facilitate generation of a reply to an if it can do SO _ To this end, and as of the event 30 utterance that is received by the system during the interac- recognition function, the critics are executed against the set tive conversation, typically a conversation between a user of candidate interpretations. If this initial pass through the and an agent: While the following description focuses o the critics returs a positive result, work of the event recognition user-live agent use case, this is not a limitation. The inter- sub-system is done (for this first pass), as the sub-system has active conversation may also involve some automated pro- recognized the user' $ input   If; however; the initial pass 35 cess aS a participant: Typically and in the live agent use through the critics returns empty-handed (i.e,_ no candidate case, the utterance is a written query or question that the user interpretation   survives), then the event recognition sub- enters   into a conversational chat interface as previously system tries to assign a new event. The new event is a new described; although this is not a limitation, as the utterance instance of an event that will initially have only one obser- may be received in the system in other words (orally, email, vation in it, namely, a candidate interpretation that makes it 40 text message, an input form; or the like) In a representative through the critics. To this end, a second pass through the implementation as described below, the technique is imple- critics is performed: This  second pass may or may not mented as an Application   Programming Interface   (API) identify a candidate interpretation: If a candidate interpre- (here, referred to as the suggested replies API) in a conver- tation passes the critics; it is used for the new event: If; sational bot-based information and retrieval system that also however; evaluation of the new event also returns empty- 45 supports   semantic   search} as also described above. An handed (i.e-= no candidate interpretation logically starts a API-based implementation is not a limitation, as the func- new event), the routine then continues by moving 0 to tionality described below may be implemented in associa- event aliasing: As noted above, first  the system tries an tion  with other types of information search and retrieval aliased event; where the system allows an aliased addition; systems, applications, processes or programs, or as a stand- namely, where a new instance of an event is started at a 50 alone functionality in computer program code position in the conversation where the system has not seen Turing to the  representative API  implementation, the (in the historical data) that kind (label) of event start _ Once suggested  replies  API is a tool that allows the service again, the critics are run in an  attempt to find a provider and its customers to generate more accurate and candidate   interpretation   Processing  efficiencies are pro- relevant answers to outside inquiries in live-chat mode using vided by caching results of the critic evaluations where 55 the power of semantic search and generative-AI: The API is possible  The result of this iterative process (trying first to accessible to be called by one or more   functions of an extend an event; or start a new event; or aliasing an event, information and search retrieval system, such as (but with- etc.) is a given candidate interpretation: out limitation) the conversational-bot based systems To this end, the given candidate interpretation identified described above. As will be described, and in this non- by the event recognition sub-system is applied to the data 60 limiting embodiment; the API brings together several sub- model to produce an adjusted data model; As used herein; API components that are now described with reference to adjusting the data model may involve an addition to the data FIG. 8.As depicted there, and in a live-chat mode, a user 800 model; or not rolling back a change (which typically occurs is associated  with a live-chat agent; e.g-, an SDR (not when a candidate interpretation is rejected by a critic) shown), and he or she makes an utterance that is received (or Critics may be the same or distinct software agents. By 65 intercepted by) the suggested replies API 804. In response _ way of example, the following agents may be used for event API 804 makes an automated request for suggested replies recognition: 806 to a sub-API  component, namely, a generative chat long (e.g;, (e.g;, part again"
      },
      {
        "type": "text",
        "page": 22,
        "content": "US 11,960,514 Bl 15 16 application (called generative-chat-app) 808. In this imple- functionality is depicted by the service flow 805 as shown in mentation, the generative chat application 808 in turn has FIG. 8. A live-chat agent graphical user interface (GUI) may associated therewith several additional   sub-components be used for this purpose_ including a moderation API 810, and a semantic-search API As described above; the suggested replies API may lever- 812. These sub-components may be shared by one or more 5 age one or both the semantic-search API, and the moderation suggested replies  API instances, and typically there is a API. It is not required that every request be processed by suggested reply API instance associated with a particular these additional API sub-components, although typically at conversation for a live-chat agent: The semantic-search API least the semantic search is used to more carefully refine the 812 leverages the semantic search and retrieval methods prompt that will be directed to the external generative AI. As described above (or other semantic search functionality) to 10 noted above, FIG. 9 depicts a representative request 900 return context based 0n a semantic search_ The moderation directed to the suggested replies API of this disclosure, and API 810 is used to mask any detected personally-identifiable FIG. 10 depicts a sample response 1000 aS returned to the information (PII) from passed to the generative AI. suggested_ replies API from an external   generative AI Logically, the moderation API sub-component sits between request: FIG. 11 depicts a representative   request 1100 the response from the semantic-search service API and the 15 directed to a semantic-search API sub-component by the generative chat application API call to the generative Al text generative chat app API, and FIG. 12 depicts a sample completion   endpoint; and it is used extract   personally - response 1200 as retured to the generative chat app in identifiable information (PII) or other sensitive content so response to the request shown in FIG. 11. FIG. 13 depicts a that it is not posted to the generative AI, representative request 1300 directed to a moderation API In  addition;  ad  according to another   aspect  of this 20 sub-component by the generative chat app API, and FIG. 14 disclosure, a service 805 is provided to control whether to depicts a sample response 1400 as returned to the generative route the Al-generated response to a human (the live-chat chat app in response to the request shown in FIG. 13. agent) or to populate  the   automated  reply back to the For semantic search; and besides a text corpus, in one Suggested replies API directly.  This service enables the implementation a text embedding  model is used, and a Al-generated output to be used without edits, to be revised 25 search algorithm is used to create a vector database. One and then passed on for use, or to be dismissed  With respect model that the Semantic-Search API may use to embed text to the   interactive to a human a live-chat agent is a transformer; and FAISS   (FacebookR AI Similarity graphical user interface (GUI) may be used to facilitate any Search) is a library may be used to handle semantic search- such interaction on the retured generative Al response FAISS leverages the hierarchical navigable small worl Summarizing, and as depicted in FIG. 8, generative chat 30 (HNSW) algorithm; which produces state-of-the-art application 808 makes several requests, a request 814 for mance with very high search In operation; the seman- semantic content directed to the semantic context search API tic-search APL receives a post-request  from the generative 812, ad a request 816 to scrub PII directed to the modera- chat  application. After filtering for relevant context tion API. The operation of the Suggested Replies API is now an organization identifier passed from the generative described by way of example. 35 chat  application); the utterance is passed into the  vector With reference to FIG. 9, assume that the generative chat database to retur a semantically-similar context. application is running on an endpoint (identified at the URL The above-described set of APIs may be integrated into a 900), and the user has asked the following prompt: \"how can single API, or may be implemented as a standalone set of Drift help me create revenue?\" As depicted, the payload 902 application code. In addition; and if the information retrieval of the request (in this case a post-request) includes several 40 system supports a generative Al model, all of the above- fields   including,  among   others, an identification of the described functionality may be integrated together without 66 machine learning Or other 'model' that is currently in use to requiring the call-out to the external generative AI model. support the conversation; a \"temperature\" indicating a rela- The   above-described   system may   leverage   Semantic- tive priority of the request, the prompt; a string identifying Content-Ingestion (SCI): SCI is a service that ingests any particular PII data that should be scrubbed from the request; 45 document type, and it parses a document into digestible text and a string identifying that a particular context should be chunks that may then be used by other downstream services associated with the prompt  When the post-request is sent to (namely, the generative-chat-app and the semantic-search) the endpoint 900, the endpoint passes the prompt value SCI leverages a Python library, called Unstructured   When through the semantic-search API to find a relevant context; a document is received; the SCI service ingests   it and As noted above, the semantic search and retrieval techniques 50 converts it into a structured JSON format. SCI may ingest a may be used for this purpose, although this is not a limita- rolling conversation history, which can facilitate improving tion: The semantic-Search API returns the relevant context semantic-search_ (when context can be   found),  and the   prompt is then According to another aspect of this disclosure, the sug- enriched to include it: The resulting enriched prompt is then replies tool provides for conversation history cach- passed through to a text completion endpoint associated with 55 ing: In particular; and referring back to FIG. 8, the system an external generative Al text completion endpoint; such as may cache conversation turns (e.g,, in database or other data OpenAI ChatGPT-3. This particular language model is not store) 818 and append the history into the prompt sent to the intended to be limiting, as other large language models may generative AI. In the example embodiment, this history is be used for this purpose. Upon recei a response from the retrieved by the generative chat API issuing a request 820 to generative AI text completion   endpoint;, the suggested 60 the database. By affording this history; the generative AI API returns it, e.g,, to a front-end application tool that potentially provides more accurate replies. More generally, is managing the conversation (namely, the interaction the goal of this aspect of the tool is to improve the accuracy between the user and the live-agent). of suggested-replies by caching conversation history and In   addition;  and according to another   aspect of this using it to generate more contextually relevant responses A disclosure, the live-chat agent that requested the generative 65 conversational history cache stores in a database the text of AI response preferably is afforded the ability to use the previous user inputs and replies from either the generative output without edits, to make a revision; or to dismiss it. This model or the live-agent   Each  conversation is associated being being, ing: perfor- speed. (e.g;, using gested ving  replies_"
      },
      {
        "type": "text",
        "page": 23,
        "content": "US 11,960,514 Bl 17 18 with a unique conversation ID, which is then used to retrieve suggested replies AI service 1506. The suggested replies AI the relevant history when generating a response. When user service 1506 has a number of components. These include the input is received, the generative-chat-application first checks generative chat application 1508, the semantic search ser- the conversation history cache to see if there is any relevant vice 1510, an embeddings service 1512, a vector database conversation history: If $O, the conversation history is passed 5 1514,a moderation service 1516, and several data pipelines to the response generation module along with the current 1518. As also depicted, the suggested replies AI service user input and the context found from semantic-search to 1506 interacts with one or more external services, such as generate a contextually-relevant   response. If there is no the generative model service 1520. relevant conversation history, the response generation mod The generative chat application 1508 is the service that ule generates a response based on the current user input and 10 receives the request from the conversation back-end 1504 semantic-search context, as previously described: and, as previously explained with respect to FIG. 8, acts as The conversation history caching tool has several ben- the broker between the semantic search 1510, the generative efits. It provide for improved accuracy of the generative AI model service 1520, and the moderation component 1516. In response. In particular; by using conversation history to operation; the generative chat application 1508 receives an generate responses, the tool is able to generate more con- 15 input utterance_ The utterance is then sent to the semantic textually-relevant responses and improve the overall accu- search component for relevant context The semantic search racy of the system: Conversation history caching also facili- component sends back relevant context: The generative chat tates personalization; to this end, the conversation history application 1508 then sends the context and the utterance to cache allows the system to provide a more personalized the moderation service 1516. The moderation service 1516 experience to users by incorporating_previous interactions 20 scrubs PII from the context and utterance_ The generative into the response generation process_ The tool also provides chat service then injects the context and utterance into a for efliciency; in particular; by leveraging the cached con- prompt, and that prompt is then sent to the external genera- versation history, the system is able to reduce the number of tive model service 1520 where it is applied to the generative queries to the generative model endpoint, improving the model_ The generative model service 1520 returns a efficiency and scalability of the system: 25 response, and the   generative chat service returns that Another aspect of this disclosure is that suggested replies response to the conversation back-end: responses can be  applied in a feedback to provide As noted, the semantic search receives the utterance from additional benefits_ As noted above, the suggested replies the generative chat   application and retrieves the relevant API allows a live agent to review and control the responses context; in this scenario from the vector database 1514. In created by the generative model, with the to accept 30 particular; the incoming utterance is passed through the the full response; edit the response, or dismiss it. According embeddings service 1512, which identifies an embedding to this aspect, the system also stores a data set about how an and sends it to the vector database 1514 to retrieve the utterance was handled by the system in a database and ties context: The identified context for the utterance is sent from it back t0 the semantic-search vector-database, creating a the vector database to the semantic search to complete this feedback The data set may comprise the utterance, the 35 portion of the process flow. enriched utterance, the context returned by the semantic The embeddings service 1512 transforms incoming text search API, the response returned by the generative AI, and into a vector of numbers (the ~embedding\") As noted above, information about how the generative-AI-generated the embeddings service 1512 connects with the semantic response was handled (accepted, edited, dismissed, or the search service, and it also connects with the data pipelines like). By collecting this feedback data and sending it back to 40 1518 to embed new data and store it into the vector database the vector-database; the   system is able to continuously 1514. improve the accuracy of the generative model, provide better The vector database 1514 stores all context and conver- responses over time, and be more adaptable to nuance_ sation history created and uploaded by the data pipelines The   generative chat   app may be   configured to 1518. The data pipelines update the vector database with responses from the generative Al that have a likelihood of 45 new data. In this operating embodiment, the data pipelines fictitious. comprise several data sources. The conversation history job In summary, the suggested replies functionality enables 1522 collects chat logs that are saved for customers of the the agent  (or; in an alternative embodiment; some other platform: These are queried periodically (e-g-, daily), process   automation) to generate a real-time  response to embedded,  and then stored in the  vector database by a complex queries, lower time to response, and eliminate the S0   historical conversation query service 1524, which service need t0 research answers outside of the interactive conver- also is responsible for selectively pulling chat-logs associ- sation This functionality leverages a customer' $ indexed or ated with an organization identifier (org-ID) Reference other website content; the context of the conversation; and a 1526 represents an ad-hoc document processing job, which language model (LLM) to provide a best possible is an on-demand service that calls a document   parsing answer for the agent to use an interactive conversa- 55 service 1528 as necessary to perform text extraction, embed- tion: Agents also have the ability to customize the suggested ding, and storage of the resulting data in the vector database. reply before sending, or the agent can dismiss the suggested The moderation service 1516, as explained, removes any reply if it does not meet the agent '$ needs. personally identifiable (or other sensitive) information from FIG. 15 depicts additional details regarding a preferred the information (utterance, and context) that is used by the implementation of the system architecture of this disclosure. 60 generative chat   application to create the   generative AI In this embodiment; the live agent 1500 makes a request to prompt supplied to the generative model service_ the suggested replies service In particular; preferably the The generative model  service typically operates as an live agent 1500 interacts with a suggested replies back-end external service and is used to generate a contextual (BE) 1502, and a conversation back-end 1504. The replies response to the incoming prompt BE 1502 the usage of suggested replies into a relational 65 Enabling Technologies database, and the conversation BE 1504 is an application Typically, the computing platform that provides informa- that   caches the conversation turs and sends them to a tion search and retrieval iS managed and operated \"as-a- loop option loop: flag being logs large during logs"
      },
      {
        "type": "text",
        "page": 24,
        "content": "US 11,960,514 Bl 19 20 service\" by a service provider entity. In one embodiment, the Thus,  for  example; in one   embodiment; and without platform is accessible over the publicly-routed Internet at a limitation; a neural network such as described is used to particular   domain, or sub-domain. The   platform is a extract features from an utterance, with those   extracted securely-connected  infrastructure   (typically via SSLITLS features then used to train a Support Vector Machine connections), and that infrastructure includes data encrypted 5 (SVM): at rest, e.g., in an encrypted database, and in transit  The In unsupervised machine learning, the algorithm trains on computing platform typically comprises a set of applications unlabeled data. The of these algorithms is to explore the implemented as network-accessible services One or more data and find some structure within. The most widely used applications (services) may be combined with oe aother: unsupervised learing algorithms are Cluster Analysis and An application (service) may be implemented a set of 10 Market Basket Analysis. In  reinforcement  learning   the computing resources that are co-located or themselves dis- algorithm learns through a feedback system: The algorithm tributed:  Typically, an application is implemented one takes actions and receives feedback about the appropriate- or more computing systems. The computing platform (or portions thereof) may be implemented in a dedicated envi- ness of its actions and based on the feedback; modifies the ronment, in an On-premises manner; as a cloud-based archi- 15 strategy and takes further actions that would maximize the tecture, or some hybrid expected reward over a given amount f time. The system may be implemented on-premises in an The   following   provides additional details   regarding enterprise network), in a cloud computing environment, or supervised machine learning: As above, supervised in a hybrid infrastructure. An individual end user typically learning is the machine learning task of inferring a function accesses the system using a user application executing o a 20 from labeled training data: The training data consist of a set computing device (e.g;, mobile phone, tablet,  laptop or of training examples. In supervised learning, typically each desktop computer; Internet-connected appliance, etc ). In a example is a pair consisting of an input object (typically a typical use case, a user application iS a mobile application vector), and a desired output value (also called the super- (app) that a user obtains from a publicly-available source, signal). A supervised learning algorithm analyzes the such as a mobile application storefront  The platform may be 25 training data and produces an inferred function, which can managed  and operated by a service  provider Although be used for mapping new examples. An optimal scenario typically the platform is network-accessible, e.g,, via the allows for the algorithm to correctly determine the class publicly-routed   Internet; the   computing   system may be labels for unseen instances. This requires the learning algo- implemented  in a standalone or on-premises manner: In rithm to generalize reasonably  from the training data to addition; one or more of the identified components may 30 unseen situations. interoperate with some other enterprise computing system o For supervised learning, the following steps are used. An application: initial determination is what kind of data is to be used as a Preferably;  the   platform   supports a machine learning system. The nature and type of Machine Learning (ML) training set_ The training set is then gathered. In particular; algorithms that are used to process the query may vary As 35 a set of input objects is gathered and corresponding outputs is known ML algorithms iteratively learn from the data, thus are also gathered, either from human experts or from mea- allowing the system to find hidden insights without being surements _ Then, an input   feature  representation of the explicitly programmed where to look. ML tasks are typically leared function is determined. In this approach, typically classified into various categories depending on the nature of the input object is transformed into a feature vector; which the learning   signal or feedback   available to a learning 40 contains a number of features that are descriptive of the system; namely supervised learning, unsupervised learning, object The structure of the learned function and correspond- and reinforcement   learning   In  supervised  learning,  the ing learing algorithm are then determined For example, algorithm trains o labeled historic data and learns general support vector machines or decision trees may be used  The rules that map input to outputltarget   The  discovery of learning algorithm is then run on the gathered training set. relationships between the input variables and the labeVtarget 45 Some  supervised learning   algorithms   require a user to variable in supervised learning is done with a training set, determine certain control parameters. These parameters may and the   system lears from the training data: In this be adjusted by optimizing performance on a subset (called a approach; a test set is used to evaluate whether the discov- validation set) of the training set, or via cross-validation. The ered relationships hold and the strength and utility of the accuracy of the learned function is then evaluated: After predictive relationship is assessed by feeding the model with 50 parameter adjustment and learning, the performance of the the input variables of the test data and comparing the label resulting function is measured on a test set that is separate predicted by the model with the actual label of the data. The from the training set_ most widely used supervised learing algorithms are One or more functions of the computing platform of this port Vector Machines, linear regression, logistic regression; disclosure may be implemented in a cloud-based architec- naive Bayes; and neural networks. As will be described; the 55 ture_ As is well-known, cloud  computing  is a model of techniques_herein preferably leverage one or more neural service delivery for enabling on-demand network access to networks Formally, a NN is a function g: X->Y, where X is a shared of configurable computing resources an input space, and Y is an output space representing a networks, network bandwidth, servers, processing, memory, categorical set in a classification setting (or a real number in storage, applications, virtual  machines, and services) that a regression setting): For a sample X that is an element of X, 60 can be rapidly provisioned and released with minimal man- g(x)fz (f1-1( _ ((f,(x)))) Each f; represents a layer; and f2 agement effort or interaction with a provider of the service. is  the last  output  layer: The last  output  layer  creates a Available services models that may be leveraged in whole or mapping  from a hidden space to the output  space (class in part include: Software as a Service (SaaS) (the provider' $ labels) through a softmax function that outputs a vector of applications running On cloud infrastructure); Platfor as a real numbers in the range [0, 1] that add up to 1. The output 65 service (PaaS) (the customer deploys applications that may of the softmax function is a probability distribution of input be created provider tools onto the cloud infrastruc- X oVer C different possible output classes ture); Infrastructure as a Service (IaaS) (customer 'provisions being goal using using (e.g,, noted visory Sup- pool (e.g using"
      },
      {
        "type": "text",
        "page": 25,
        "content": "US 11,960,514 Bl 21 22 its own processing, storage, networks and other computing should be   understood   that   such order is exemplary, as resources and can deploy and run operating systems and alternative embodiments may perform the operations in a applications) different order; combine certain operations, overlap certain The platform may comprise  co-located   hardware and operations, or the like. References in the specification to a software resources; or resources that are physically, logi- 5 given embodiment indicate that the embodiment described cally, virtually andlor geographically distinct. Communica- may include a particular feature, structure, or characteristic, tion networks used to communicate to and from the platform but every embodiment may not   necessarily  include the services may be packet-based, non-packet based, and secure particular feature, structure; Or characteristic. or non-secure; or some combination thereof While the disclosed subject matter has been described in More generally, the techniques described herein are 10 the context of a method or process, the subject matter also vided using a set of one or more computing-related entities (systems, machines, processes, programs, libraries,  func- relates to apparatus for performing the operations herein: This apparatus may be a particular machine that is specially tions, or the like) that  together  facilitate or provide the described functionality described above. In a typical imple- constructed for the required purposes, or it may comprise a mentation, a representative machine 0 which the software 15 computer otherwise selectively activated or reconfigured by executes comprises commodity hardware, an operating sys- a computer program stored in the computer: Such a com- tem; an application   runtime  environment,   and a set  of puter program may be stored in a computer readable storage applications or processes and associated data, that provide medium, such as, but is not limited to, any type of disk the functionality of a given   system or subsystem _ As including an optical disk, a CD-ROM, ad a magnetic- described, the functionality may be implemented in a stand- 20 optical disk, a read-only memory (ROM); a random access alone machine; or across a distributed set of machines. memory (RAM) a magnetic Or optical card, or any type of Other  enabling technologies  for the machine learning media suitable for storing electronic instructions, and each algorithms include, without limitation, vector autoregressive coupled to a computer system bus_ modeling (e-g , Autoregressive Integrated Average given   implementation of the computing platform is (ARIMA)); state space modeling (e g., using a Kalman 25 software that executes on a hardware platform running an filter); a Hidden Markov Model (HMM); recurrent neural operating system such as Linux. A machine implementing network (RNN)   modeling, RNN with short-term the techniques herein comprises a hardware processor; and memory (LSTM), Random Forests, Generalized Linear non-transitory computer memory holding computer program Models, Extreme Gradient  Boosting,   Extreme Random instructions that are executed by the processor to perform Trees, and others. By applying these modeling techniques; 30 the above-described methods. new types of features are extracted, e.g;, as follows: model The functionality may be implemented with other appli- parameters (e.g: coeflicients for dynamics, noise variance, cation layer protocols besides HTTP/HTTPS, or any other etc.), latent states, and predicted values for a next couple of protocol having similar operating characteristics. observation periods There is no limitation on the type of computing entity that Typically, but   without  limitation; a client device is a 35 may implement the client-side or server-side of the connec- mobile device, such as a smartphone, tablet; or wearable tion: computing entity (system; machine, device, prO- computing   device, laptop or desktop. A typical   mobile gram; process, utility, or the like) may act as the client or the device comprises a CPU (central processing unit), computer server: memory, such as RAM, and a drive. The device software While given components of the   system have been includes an operating system (e.g, GoogleD AndroidTM, or 40 described separately, one of ordinary skill will appreciate the like), and generic support applications and utilities  The that some of the functions may be combined or shared in device may also include a graphics processing unit (GPU) given instructions, program sequences, code portions, and The mobile device also includes a touch-sensing device O the like. application or functionality described herein interface configured to receive input from a user' s touch and may be implemented as native code, by providing hooks into to send this information to processor The touch-sensing 45 another application, by facilitating use of the mechanism as device typically is a touch screen: The mobile device com- a plug-in, by linking to the mechanism, and the like. prises suitable programming to facilitate gesture-based con- The platform functionality may be co-located o various trol, in a manner that is known in the art_ partslcomponents   may be   separately  and nun as   distinct Generalizing, the mobile device is any wireless  client functions, perhaps in one or more locations (over a distrib- device, e-g;, a cellphone, pager; a personal digital assistant 50 uted network): (PDA, e-g;, with GPRS NIC), a mobile computer with a Each above-described process preferably is implemented smartphone client, or the like: Other   mobile devices in in   computer software as a set of program instructions which the technique may be practiced include ay access executable in one or more processors, as a special-purpose protocol-enabled device (e-g , an AndroidTM_based device, machine. or the like) that is capable of sending and receiving data in 55 The techniques herein generally provide for the above- a wireless manner using a wireless protocol  Typical wire- described improvements to a technology or technical field, less protocols are: WiFi; GSNGPRS, CDMA or  WiMax  as well as the specific technological improvements to These protocols implement the ISO/OSI Physical and Data ouS fields; all as described above. Link layers (Layers 1 & 2) upon which a traditional net- The   above-described solution may be implemented to working stack is built, complete with IP; TCP; SSLITLS and 60 enable semantic search and retrieval from information irre- HTTP spective of the how that inforation originates, e.g;, from Each above-described process preferably is implemented voice   transcripts, chat   transcripts,  email- or messaging- in computer software as a set of program instructions based transcripts, Or otherwise. Thus, the semantic search executable in one or more processors, as a special-purpose and retrieval described herein may support multi-channel machine. 65 solutions Similarly, the example application scenarios, such While the above describes a particular order of operations as those involving historical sales-related transcripts, are not performed by certain embodiments   of the invention; it intended to be limiting either: pro- Moving long Any Any vari-"
      },
      {
        "type": "text",
        "page": 26,
        "content": "US 11,960,514 Bl 23 24 What is claimed follows below. agents, the computing platform associated with an informa- The invention claimed is: tion search and retrieval system, comprising: 1. A method of generating content in association with an computer hardware comprising oe or more hardware information search and retrieval system, comprising: processors; and configuring an application programming interface (API); 5 computer memory holding computer software executed responsive to receipt via the API of a query from a user; by the one or more hardware processors, the computer the query having been received by the information software providing content in association with a live search and retrieval system: agent, wherein the computer software comprises pro- semantically-searching the query to identify a context gram code configured as an application programming associated with the query; 10 interface (API) to: identifying a conversation history between the user and respond to receipt via the API of a query from a user; the information search and retrieval system; generating an enriched query by  associating to the the query having been received by the information query both the context and at least a portion of the search and retrieval system; conversation history; 15 semantically-search   the query to identify a context receiving   information  associated   with the   enriched associated with the query; identify a conversation history between the user and the query, the  information having been generated by evaluation of the enriched query a transforer- information search and retrieval system; based language model; generate an enriched query by associating to the query generating a response to the query using the informa- 20 both the context and at least a portion of the con- tion; and versation history; returning the response to the information search and receive information associated with the enriched query, retrieval system: the information having been generated by valuation 2_ The method as described in claim 1 wherein receiving of the  enriched query a transformer-based information associated with the enriched query comprises: 25 language model; forwarding the enriched query to an external generative- generate a response to the query using the information; Al service; and and receiving the information from the external generative-AI retun the response to the   information search and service. retrieval system. 3_ The method as described in claim 1 further including 30 11. The computing  platform as described in claim 10 masking personally-identifiable or other sensitive informa- wherein the program code configured to receive information tion identified in the query to generating the enriched associated with the enriched query comprises program code configured to: query: 4. The method as described in claim 1 wherein generating forward the enriched query to an external generative-AI the response comprises one of: passing the information back 35 service; and to the user; modifying the information to generate modified receive the information from the external generative-AI service_ information and passing the modified information back to the user; and dismissing the information: 12. The computing platfor as described in claim 10 5. The method as described in claim 1 wherein the wherein the program code is further configured to mask conversational history includes a present   conversation in 40 personally-identifiable or other sensitive information iden- which the query arises, and optionally one or more other tified in the query to generating the enriched query. conversations_ 13. The computing platform as described in claim 10 6. The method as described in claim 1 wherein the portion wherein the program code   configured to generate the of the conversation history is condensed prior to being response comprises   program code  further  configured to associated with the 45 perform one of: passing the information back to the user; query. 7_ The method as described in claim 1 further including modifying the information to generate modified information updating a semantic search model utilizing the information: and passing the modified information back to the user; and 8. The method as described in claim 1 wherein the query dismissing the information is received by a live agent during a live chat session, and the 14. The computing platform as described in claim 10 response to the query is provided to the user by the live 50 wherein the program code is further configured to update a semantic search model using the information: agent 9. The   method as   described in claim 1 wherein the 15. The computing platform as described in claim 10 conversation  history is a current conversation dialogue wherein the conversation history is a current conversation between the user and a chatbot that includes the query: dialogue between the user and a chatbot that includes the 10.A Software-As-A-Service (SaaS) computing platform 55 query. supporting  conversations with a set of one or more live * 8 8 * * using using prior prior"
      }
    ]
  }
}